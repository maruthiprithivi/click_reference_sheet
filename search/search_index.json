{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ClickHouse SQL Reference Sheet","text":"<p>A comprehensive SQL command reference sheet for ClickHouse Cloud field engineers. This guide provides essential SQL commands, best practices, and optimization techniques for working with ClickHouse deployments.</p>"},{"location":"#quick-reference","title":"Quick Reference","text":"<p>Here are some of the most frequently used commands:</p> <pre><code>-- Check ClickHouse version and health\nSELECT version();\nSELECT 1;\n\n-- List databases and tables\nSHOW DATABASES;\nSHOW TABLES;\n\n-- Monitor system\nSELECT *\nFROM system.metrics\nLIMIT 5;\n\n-- Check current queries\nSELECT query_id, user, query\nFROM system.processes\nORDER BY elapsed DESC;\n</code></pre>"},{"location":"#basic-operations","title":"Basic Operations","text":""},{"location":"#connection-management","title":"Connection Management","text":""},{"location":"#check-current-connection","title":"Check Current Connection","text":"<pre><code>SELECT\n    currentUser() AS current_user,\n    currentDatabase() AS current_database,\n    currentQueryId() AS query_id;\n</code></pre>"},{"location":"#view-active-sessions","title":"View Active Sessions","text":"<pre><code>SELECT\n    user,\n    client_hostname,\n    client_name,\n    client_version,\n    query_start_time,\n    query\nFROM system.processes\nORDER BY query_start_time DESC;\n</code></pre>"},{"location":"#database-operations","title":"Database Operations","text":""},{"location":"#list-databases","title":"List Databases","text":"<pre><code>-- Show all databases\nSHOW DATABASES;\n\n-- Get detailed information\nSELECT\n    name,\n    engine,\n    data_path,\n    metadata_path,\n    uuid\nFROM system.databases;\n</code></pre>"},{"location":"#database-management","title":"Database Management","text":"<pre><code>-- Create database\nCREATE DATABASE IF NOT EXISTS database_name;\n\n-- Drop database\nDROP DATABASE IF EXISTS database_name;\n\n-- Switch database\nUSE database_name;\n</code></pre>"},{"location":"#table-operations","title":"Table Operations","text":""},{"location":"#list-tables","title":"List Tables","text":"<pre><code>-- Show tables with details\nSELECT\n    database,\n    name AS table_name,\n    engine,\n    total_rows,\n    formatReadableSize(total_bytes) AS total_size,\n    formatReadableSize(memory_usage) AS memory_usage\nFROM system.tables\nWHERE database = currentDatabase()\nORDER BY total_bytes DESC;\n</code></pre>"},{"location":"#create-table","title":"Create Table","text":"<pre><code>CREATE TABLE IF NOT EXISTS table_name\n(\n    id UInt32,\n    timestamp DateTime,\n    event_type String,\n    user_id String,\n    metadata JSON\n)\nENGINE = MergeTree()\nORDER BY (timestamp, id);\n</code></pre>"},{"location":"#alter-table","title":"Alter Table","text":"<pre><code>-- Add column\nALTER TABLE table_name\n    ADD COLUMN IF NOT EXISTS new_column_name String;\n\n-- Modify column\nALTER TABLE table_name\n    MODIFY COLUMN column_name UInt64;\n\n-- Drop column\nALTER TABLE table_name\n    DROP COLUMN IF EXISTS column_name;\n</code></pre>"},{"location":"#data-operations","title":"Data Operations","text":""},{"location":"#insert-commands","title":"Insert Commands","text":""},{"location":"#basic-insert","title":"Basic Insert","text":"<pre><code>-- Single row\nINSERT INTO table_name (column1, column2, column3)\nVALUES ('value1', 'value2', 'value3');\n\n-- Multiple rows\nINSERT INTO table_name (column1, column2, column3)\nVALUES\n    ('value1', 'value2', 'value3'),\n    ('value4', 'value5', 'value6');\n</code></pre>"},{"location":"#insert-from-select","title":"Insert from SELECT","text":"<pre><code>INSERT INTO target_table\nSELECT *\nFROM source_table\nWHERE condition;\n</code></pre>"},{"location":"#query-operations","title":"Query Operations","text":""},{"location":"#basic-select","title":"Basic SELECT","text":"<pre><code>-- Simple query\nSELECT *\nFROM table_name\nLIMIT 10;\n\n-- With filtering and aggregation\nSELECT\n    column1,\n    count() AS count\nFROM table_name\nWHERE column2 = 'value'\nGROUP BY column1\nORDER BY count DESC;\n</code></pre>"},{"location":"#advanced-queries","title":"Advanced Queries","text":"<pre><code>-- Complex aggregations\nSELECT\n    toStartOfHour(timestamp) AS hour,\n    count() AS events,\n    uniqExact(user_id) AS unique_users,\n    avg(value) AS avg_value\nFROM table_name\nGROUP BY hour\nORDER BY hour DESC;\n\n-- Using PREWHERE\nSELECT *\nFROM table_name\nPREWHERE column1 = 'value'\nWHERE column2 &gt; 0;\n</code></pre>"},{"location":"#update-and-delete","title":"Update and Delete","text":""},{"location":"#update-data","title":"Update Data","text":"<pre><code>-- Update values\nALTER TABLE table_name\nUPDATE column1 = 'new_value'\nWHERE column2 = 'condition';\n\n-- Conditional update\nALTER TABLE table_name\nUPDATE column1 = CASE\n    WHEN column2 &gt; 100 THEN 'high'\n    WHEN column2 &gt; 50 THEN 'medium'\n    ELSE 'low'\nEND;\n</code></pre>"},{"location":"#delete-data","title":"Delete Data","text":"<pre><code>-- Delete rows\nALTER TABLE table_name\nDELETE WHERE column1 = 'value';\n\n-- Delete old data\nALTER TABLE table_name\nDELETE WHERE timestamp &lt; now() - INTERVAL 90 DAY;\n</code></pre>"},{"location":"#system-operations","title":"System Operations","text":""},{"location":"#monitoring","title":"Monitoring","text":""},{"location":"#system-health","title":"System Health","text":"<pre><code>-- Check version and uptime\nSELECT\n    version() AS version,\n    uptime() AS uptime_seconds,\n    formatReadableTimeDelta(uptime()) AS uptime_readable;\n\n-- Resource usage\nSELECT\n    metric,\n    value,\n    description\nFROM system.metrics\nWHERE metric LIKE '%Memory%'\nORDER BY metric;\n</code></pre>"},{"location":"#query-monitoring","title":"Query Monitoring","text":"<pre><code>-- Active queries\nSELECT\n    query_id,\n    user,\n    query,\n    elapsed,\n    formatReadableSize(memory_usage) AS memory\nFROM system.processes\nWHERE elapsed &gt; 60\nORDER BY elapsed DESC;\n\n-- Query history\nSELECT\n    type,\n    query,\n    query_duration_ms,\n    read_rows,\n    read_bytes,\n    memory_usage\nFROM system.query_log\nWHERE type &gt;= 2\n  AND event_date &gt;= today() - 1\nORDER BY query_start_time DESC;\n</code></pre>"},{"location":"#performance-optimization","title":"Performance Optimization","text":""},{"location":"#query-performance","title":"Query Performance","text":"<pre><code>-- Analyze slow queries\nSELECT\n    query,\n    query_duration_ms,\n    read_rows,\n    read_bytes,\n    memory_usage\nFROM system.query_log\nWHERE type &gt;= 2\nORDER BY query_duration_ms DESC\nLIMIT 10;\n\n-- Memory usage by query\nSELECT\n    query_id,\n    user,\n    formatReadableSize(memory_usage) AS memory,\n    elapsed\nFROM system.processes\nORDER BY memory_usage DESC;\n</code></pre>"},{"location":"#storage-optimization","title":"Storage Optimization","text":"<pre><code>-- Table parts analysis\nSELECT\n    database,\n    table,\n    count() AS parts_count,\n    sum(rows) AS total_rows,\n    formatReadableSize(sum(bytes)) AS total_size\nFROM system.parts\nWHERE active\nGROUP BY database, table\nHAVING parts_count &gt; 10\nORDER BY parts_count DESC;\n\n-- Compression efficiency\nSELECT\n    database,\n    table,\n    formatReadableSize(sum(data_compressed_bytes)) AS compressed,\n    formatReadableSize(sum(data_uncompressed_bytes)) AS uncompressed,\n    round(sum(data_uncompressed_bytes) / sum(data_compressed_bytes), 2) AS ratio\nFROM system.parts\nWHERE active\nGROUP BY database, table\nORDER BY ratio DESC;\n</code></pre>"},{"location":"#best-practices","title":"Best Practices","text":""},{"location":"#query-optimization","title":"Query Optimization","text":"<ol> <li>Always use <code>LIMIT</code> when querying large tables</li> <li>Use <code>PREWHERE</code> for more efficient filtering</li> <li>Leverage materialized views for common queries</li> <li>Consider sampling for approximate results</li> <li>Monitor and analyze slow queries regularly</li> </ol>"},{"location":"#data-management","title":"Data Management","text":"<ol> <li>Use bulk inserts instead of single-row inserts</li> <li>Implement proper partitioning strategies</li> <li>Regular monitoring of table sizes and parts</li> <li>Schedule maintenance operations during off-peak hours</li> <li>Keep track of mutation progress and performance</li> </ol>"},{"location":"#system-maintenance","title":"System Maintenance","text":"<ol> <li>Monitor system resources regularly</li> <li>Track query performance and patterns</li> <li>Optimize storage and compression settings</li> <li>Maintain proper backup strategies</li> <li>Regular cleanup of old data</li> </ol>"},{"location":"#troubleshooting","title":"Troubleshooting","text":""},{"location":"#common-issues","title":"Common Issues","text":"<ol> <li>Memory Usage</li> </ol> <pre><code>-- Check memory-intensive queries\nSELECT\n    query,\n    peak_memory_usage,\n    memory_usage,\n    query_duration_ms\nFROM system.query_log\nWHERE event_date &gt;= today() - 1\nORDER BY peak_memory_usage DESC;\n</code></pre> <ol> <li>Slow Queries</li> </ol> <pre><code>-- Find problematic queries\nSELECT\n    query_id,\n    user,\n    query,\n    elapsed\nFROM system.processes\nWHERE elapsed &gt; 60;\n</code></pre> <ol> <li>System Errors</li> </ol> <pre><code>-- Check error log\nSELECT\n    time,\n    level,\n    message\nFROM system.text_log\nWHERE level &gt;= 'Error'\nORDER BY time DESC;\n</code></pre>"},{"location":"#performance-issues","title":"Performance Issues","text":"<ol> <li>Check system metrics</li> <li>Analyze query patterns</li> <li>Review table structure and indexes</li> <li>Monitor background operations</li> <li>Verify resource utilization</li> </ol>"},{"location":"basic-operations/connection/","title":"Connection Commands","text":"<p>This section covers essential commands for connecting to and managing ClickHouse Cloud connections.</p>"},{"location":"basic-operations/connection/#connection-information","title":"Connection Information","text":""},{"location":"basic-operations/connection/#check-current-connection","title":"Check Current Connection","text":"<pre><code>SELECT currentUser() AS current_user,\n       currentDatabase() AS current_database,\n       currentQueryId() AS query_id;\n</code></pre>"},{"location":"basic-operations/connection/#view-connection-settings","title":"View Connection Settings","text":"<pre><code>SELECT name, value\nFROM system.settings\nWHERE name LIKE '%connection%'\nORDER BY name;\n</code></pre>"},{"location":"basic-operations/connection/#session-management","title":"Session Management","text":""},{"location":"basic-operations/connection/#view-active-sessions","title":"View Active Sessions","text":"<pre><code>SELECT user,\n       client_hostname,\n       client_name,\n       client_version,\n       query_start_time,\n       query\nFROM system.processes\nORDER BY query_start_time DESC;\n</code></pre>"},{"location":"basic-operations/connection/#kill-a-specific-query","title":"Kill a Specific Query","text":"<pre><code>KILL QUERY WHERE query_id = 'query-id-here';\n</code></pre>"},{"location":"basic-operations/connection/#connection-pool-information","title":"Connection Pool Information","text":""},{"location":"basic-operations/connection/#check-connection-pool-status","title":"Check Connection Pool Status","text":"<pre><code>SELECT *\nFROM system.metrics\nWHERE metric LIKE '%Connection%';\n</code></pre>"},{"location":"basic-operations/connection/#security-and-authentication","title":"Security and Authentication","text":""},{"location":"basic-operations/connection/#view-user-privileges","title":"View User Privileges","text":"<pre><code>SHOW GRANTS FOR CURRENT USER;\n</code></pre>"},{"location":"basic-operations/connection/#check-access-rights","title":"Check Access Rights","text":"<pre><code>SELECT * FROM system.grants;\n</code></pre>"},{"location":"basic-operations/connection/#troubleshooting-tips","title":"Troubleshooting Tips","text":""},{"location":"basic-operations/connection/#common-connection-issues","title":"Common Connection Issues","text":"<ol> <li>Connection Timeout</li> </ol> <pre><code>-- Check network timeouts\nSELECT name, value\nFROM system.settings\nWHERE name LIKE '%timeout%';\n</code></pre> <ol> <li>Connection Limits</li> </ol> <pre><code>-- Check max connections\nSELECT *\nFROM system.metrics\nWHERE metric = 'TCPConnection';\n</code></pre>"},{"location":"basic-operations/connection/#best-practices","title":"Best Practices","text":"<ol> <li>Always use secure connections (SSL/TLS) in production</li> <li>Set appropriate timeouts for your use case</li> <li>Monitor connection pools for potential issues</li> <li>Use connection pooling when appropriate</li> </ol>"},{"location":"basic-operations/connection/#connection-string-examples","title":"Connection String Examples","text":"<pre><code># Basic connection string\nclickhouse-client --host=&lt;host&gt; --port=9440 --secure --user=&lt;user&gt; --password=&lt;password&gt;\n\n# Connection with specific database\nclickhouse-client --host=&lt;host&gt; --port=9440 --secure --database=&lt;database&gt; --user=&lt;user&gt; --password=&lt;password&gt;\n</code></pre>"},{"location":"basic-operations/connection/#health-checks","title":"Health Checks","text":""},{"location":"basic-operations/connection/#basic-health-check-query","title":"Basic Health Check Query","text":"<pre><code>SELECT 1;\n</code></pre>"},{"location":"basic-operations/connection/#comprehensive-health-check","title":"Comprehensive Health Check","text":"<pre><code>SELECT\n    currentUser() AS user,\n    currentDatabase() AS database,\n    version() AS version,\n    uptime() AS uptime_seconds,\n    timezone() AS timezone;\n</code></pre>"},{"location":"basic-operations/databases/","title":"Database Operations","text":"<p>Essential commands for managing databases in ClickHouse Cloud.</p>"},{"location":"basic-operations/databases/#database-management","title":"Database Management","text":""},{"location":"basic-operations/databases/#list-databases","title":"List Databases","text":"<pre><code>-- Show all databases\nSHOW DATABASES;\n\n-- Get detailed database information\nSELECT name,\n       engine,\n       data_path,\n       metadata_path,\n       uuid\nFROM system.databases;\n</code></pre>"},{"location":"basic-operations/databases/#create-database","title":"Create Database","text":"<pre><code>-- Basic database creation\nCREATE DATABASE IF NOT EXISTS database_name;\n\n-- Create database with specific engine\nCREATE DATABASE IF NOT EXISTS database_name\nENGINE = Atomic;\n</code></pre>"},{"location":"basic-operations/databases/#drop-database","title":"Drop Database","text":"<pre><code>DROP DATABASE IF EXISTS database_name;\n</code></pre>"},{"location":"basic-operations/databases/#switch-database","title":"Switch Database","text":"<pre><code>USE database_name;\n</code></pre>"},{"location":"basic-operations/databases/#database-information","title":"Database Information","text":""},{"location":"basic-operations/databases/#database-size","title":"Database Size","text":"<pre><code>-- Get size of all databases\nSELECT\n    database,\n    formatReadableSize(sum(bytes_on_disk)) AS disk_size,\n    count() AS total_tables,\n    sum(rows) AS total_rows\nFROM system.parts\nGROUP BY database\nORDER BY sum(bytes_on_disk) DESC;\n</code></pre>"},{"location":"basic-operations/databases/#database-metadata","title":"Database Metadata","text":"<pre><code>-- View database engines\nSELECT\n    name AS database_name,\n    engine,\n    engine_full,\n    uuid\nFROM system.databases\nORDER BY name;\n</code></pre>"},{"location":"basic-operations/databases/#database-permissions","title":"Database Permissions","text":"<pre><code>-- Show database privileges\nSHOW GRANTS ON database_name;\n\n-- Check current user's access to databases\nSELECT\n    database,\n    count() AS tables_count,\n    any(engine) AS db_engine\nFROM system.tables\nWHERE has_access_to_database(database)\nGROUP BY database;\n</code></pre>"},{"location":"basic-operations/databases/#monitoring-and-maintenance","title":"Monitoring and Maintenance","text":""},{"location":"basic-operations/databases/#database-activity","title":"Database Activity","text":"<pre><code>-- Monitor database operations\nSELECT\n    database,\n    event_type,\n    event_date,\n    event_time,\n    query\nFROM system.query_log\nWHERE type &gt;= 2\n  AND event_date &gt;= today() - 1\nORDER BY event_time DESC\nLIMIT 10;\n</code></pre>"},{"location":"basic-operations/databases/#database-performance","title":"Database Performance","text":"<pre><code>-- Check database metrics\nSELECT\n    database,\n    table,\n    formatReadableSize(sum(bytes)) AS memory_usage,\n    sum(rows) AS total_rows,\n    count() AS part_count\nFROM system.parts\nGROUP BY database, table\nORDER BY sum(bytes) DESC;\n</code></pre>"},{"location":"basic-operations/databases/#best-practices","title":"Best Practices","text":"<ol> <li>Use meaningful database names</li> <li>Implement proper access controls</li> <li>Regular monitoring of database sizes</li> <li>Periodic cleanup of unused databases</li> </ol>"},{"location":"basic-operations/databases/#common-tasks","title":"Common Tasks","text":""},{"location":"basic-operations/databases/#database-backup","title":"Database Backup","text":"<pre><code>-- Create backup of database structure\nSELECT\n    concat('CREATE DATABASE IF NOT EXISTS ', name, ' ENGINE = ', engine_full, ';') AS create_statement\nFROM system.databases\nWHERE name = 'database_name';\n</code></pre>"},{"location":"basic-operations/databases/#database-replication-status","title":"Database Replication Status","text":"<pre><code>-- Check replication status for database tables\nSELECT\n    database,\n    table,\n    is_leader,\n    total_replicas,\n    active_replicas\nFROM system.replicas\nWHERE database = 'database_name'\nORDER BY table;\n</code></pre>"},{"location":"basic-operations/databases/#database-settings","title":"Database Settings","text":"<pre><code>-- View database-specific settings\nSELECT\n    name,\n    value,\n    changed,\n    description\nFROM system.settings\nWHERE name LIKE '%database%'\nORDER BY name;\n</code></pre>"},{"location":"basic-operations/tables/","title":"Table Operations","text":"<p>Essential commands for managing tables in ClickHouse Cloud.</p>"},{"location":"basic-operations/tables/#table-management","title":"Table Management","text":""},{"location":"basic-operations/tables/#list-tables","title":"List Tables","text":"<pre><code>-- Show all tables in current database\nSHOW TABLES;\n\n-- Show tables with detailed information\nSELECT\n    database,\n    name AS table_name,\n    engine,\n    total_rows,\n    formatReadableSize(total_bytes) AS total_size,\n    formatReadableSize(memory_usage) AS memory_usage\nFROM system.tables\nWHERE database = currentDatabase()\nORDER BY total_bytes DESC;\n</code></pre>"},{"location":"basic-operations/tables/#create-table","title":"Create Table","text":"<pre><code>-- Basic table creation\nCREATE TABLE IF NOT EXISTS table_name\n(\n    id UInt32,\n    timestamp DateTime,\n    event_type String,\n    user_id String,\n    metadata JSON\n)\nENGINE = MergeTree()\nORDER BY (timestamp, id);\n\n-- Create table with sampling\nCREATE TABLE IF NOT EXISTS table_name\n(\n    timestamp DateTime,\n    user_id String,\n    event_type LowCardinality(String),\n    value Float64,\n    _sample_factor UInt8\n)\nENGINE = MergeTree()\nORDER BY (timestamp, user_id)\nSAMPLE BY _sample_factor;\n</code></pre>"},{"location":"basic-operations/tables/#drop-table","title":"Drop Table","text":"<pre><code>-- Drop table\nDROP TABLE IF EXISTS table_name;\n\n-- Drop table with sync (wait for completion)\nDROP TABLE IF EXISTS table_name SYNC;\n</code></pre>"},{"location":"basic-operations/tables/#alter-table","title":"Alter Table","text":"<pre><code>-- Add column\nALTER TABLE table_name\n    ADD COLUMN IF NOT EXISTS new_column_name String;\n\n-- Modify column type\nALTER TABLE table_name\n    MODIFY COLUMN column_name UInt64;\n\n-- Drop column\nALTER TABLE table_name\n    DROP COLUMN IF EXISTS column_name;\n\n-- Rename table\nRENAME TABLE old_table TO new_table;\n</code></pre>"},{"location":"basic-operations/tables/#table-information","title":"Table Information","text":""},{"location":"basic-operations/tables/#table-structure","title":"Table Structure","text":"<pre><code>-- Show table structure\nDESCRIBE table_name;\n\n-- Show create table statement\nSHOW CREATE TABLE table_name;\n\n-- Get detailed column information\nSELECT\n    name,\n    type,\n    position,\n    default_kind,\n    default_expression\nFROM system.columns\nWHERE table = 'table_name'\nORDER BY position;\n</code></pre>"},{"location":"basic-operations/tables/#table-statistics","title":"Table Statistics","text":"<pre><code>-- Get table size and row count\nSELECT\n    table,\n    formatReadableSize(sum(bytes)) AS size,\n    sum(rows) AS row_count,\n    max(modification_time) AS last_modified\nFROM system.parts\nWHERE active AND table = 'table_name'\nGROUP BY table;\n\n-- Get detailed table metrics\nSELECT\n    partition,\n    name AS part_name,\n    rows,\n    formatReadableSize(bytes) AS part_size,\n    modification_time\nFROM system.parts\nWHERE table = 'table_name'\nORDER BY modification_time DESC;\n</code></pre>"},{"location":"basic-operations/tables/#table-maintenance","title":"Table Maintenance","text":""},{"location":"basic-operations/tables/#optimize-table","title":"Optimize Table","text":"<pre><code>-- Basic optimization\nOPTIMIZE TABLE table_name FINAL;\n\n-- Optimize specific partition\nOPTIMIZE TABLE table_name PARTITION 'partition_id' FINAL;\n</code></pre>"},{"location":"basic-operations/tables/#table-parts-management","title":"Table Parts Management","text":"<pre><code>-- Check table parts\nSELECT\n    partition,\n    name AS part_name,\n    active,\n    rows,\n    formatReadableSize(bytes) AS part_size\nFROM system.parts\nWHERE table = 'table_name'\nORDER BY bytes DESC;\n\n-- Check parts merging\nSELECT *\nFROM system.merges\nWHERE table = 'table_name';\n</code></pre>"},{"location":"basic-operations/tables/#table-replication","title":"Table Replication","text":"<pre><code>-- Check replication status\nSELECT\n    database,\n    table,\n    is_leader,\n    is_readonly,\n    future_parts,\n    parts_to_check\nFROM system.replicas\nWHERE table = 'table_name';\n</code></pre>"},{"location":"basic-operations/tables/#best-practices","title":"Best Practices","text":""},{"location":"basic-operations/tables/#storage-optimization","title":"Storage Optimization","text":"<pre><code>-- Find tables with small parts\nSELECT\n    database,\n    table,\n    count() AS parts_count,\n    formatReadableSize(sum(bytes)) AS total_size\nFROM system.parts\nWHERE active\nGROUP BY database, table\nHAVING parts_count &gt; 10\nORDER BY parts_count DESC;\n</code></pre>"},{"location":"basic-operations/tables/#monitoring","title":"Monitoring","text":"<pre><code>-- Monitor table operations\nSELECT\n    event_time,\n    query,\n    read_rows,\n    written_rows,\n    result_rows\nFROM system.query_log\nWHERE query LIKE '%table_name%'\n  AND type &gt;= 2\n  AND event_date &gt;= today() - 1\nORDER BY event_time DESC;\n</code></pre>"},{"location":"basic-operations/tables/#performance-analysis","title":"Performance Analysis","text":"<pre><code>-- Check table performance\nSELECT\n    table,\n    formatReadableSize(sum(bytes)) AS size,\n    count() AS parts,\n    sum(rows) AS rows,\n    avg(marks) AS avg_marks\nFROM system.parts\nWHERE active\nGROUP BY table\nORDER BY sum(bytes) DESC;\n</code></pre>"},{"location":"data-operations/insert/","title":"Data Insertion","text":"<p>Commands and best practices for inserting data into ClickHouse tables.</p>"},{"location":"data-operations/insert/#basic-insert-operations","title":"Basic Insert Operations","text":""},{"location":"data-operations/insert/#single-row-insert","title":"Single Row Insert","text":"<pre><code>-- Basic INSERT\nINSERT INTO table_name (column1, column2, column3)\nVALUES ('value1', 'value2', 'value3');\n\n-- Insert with DEFAULT values\nINSERT INTO table_name\nVALUES ('value1', DEFAULT, 'value3');\n</code></pre>"},{"location":"data-operations/insert/#bulk-insert","title":"Bulk Insert","text":"<pre><code>-- Multiple rows INSERT\nINSERT INTO table_name (column1, column2, column3)\nVALUES\n    ('value1', 'value2', 'value3'),\n    ('value4', 'value5', 'value6'),\n    ('value7', 'value8', 'value9');\n</code></pre>"},{"location":"data-operations/insert/#insert-from-select","title":"Insert from SELECT","text":"<pre><code>-- Insert data from another table\nINSERT INTO target_table\nSELECT *\nFROM source_table\nWHERE condition;\n\n-- Insert with column transformation\nINSERT INTO target_table (column1, column2, transformed_column)\nSELECT\n    column1,\n    column2,\n    transform_function(column3)\nFROM source_table;\n</code></pre>"},{"location":"data-operations/insert/#advanced-insert-operations","title":"Advanced Insert Operations","text":""},{"location":"data-operations/insert/#insert-with-cast","title":"Insert with CAST","text":"<pre><code>-- Insert with type casting\nINSERT INTO table_name\nSELECT\n    CAST(column1 AS UInt32) AS id,\n    CAST(column2 AS DateTime) AS timestamp,\n    column3\nFROM source_table;\n</code></pre>"},{"location":"data-operations/insert/#asynchronous-insert","title":"Asynchronous Insert","text":"<pre><code>-- Enable asynchronous inserts\nSET async_insert = 1;\nSET wait_for_async_insert = 0;\n\n-- Insert with async settings\nINSERT INTO table_name\nSELECT * FROM source_table;\n</code></pre>"},{"location":"data-operations/insert/#insert-with-deduplication","title":"Insert with Deduplication","text":"<pre><code>-- Check current deduplication window\nSELECT value\nFROM system.settings\nWHERE name = 'merge_tree_min_rows_for_concurrent_read';\n\n-- Insert with deduplication\nINSERT INTO table_name\nSELECT *\nFROM source_table\nGROUP BY id\nHAVING max(timestamp);\n</code></pre>"},{"location":"data-operations/insert/#monitoring-insert-operations","title":"Monitoring Insert Operations","text":""},{"location":"data-operations/insert/#track-insert-performance","title":"Track Insert Performance","text":"<pre><code>-- Monitor recent inserts\nSELECT\n    query_id,\n    event_time,\n    query,\n    written_rows,\n    written_bytes,\n    peak_memory_usage\nFROM system.query_log\nWHERE type = 2  -- Type INSERT\n  AND event_date &gt;= today() - 1\nORDER BY event_time DESC;\n</code></pre>"},{"location":"data-operations/insert/#check-insert-errors","title":"Check Insert Errors","text":"<pre><code>-- View failed inserts\nSELECT\n    event_time,\n    query,\n    exception,\n    stack_trace\nFROM system.query_log\nWHERE type = 2  -- Type INSERT\n  AND exception != ''\n  AND event_date &gt;= today() - 1\nORDER BY event_time DESC;\n</code></pre>"},{"location":"data-operations/insert/#best-practices","title":"Best Practices","text":""},{"location":"data-operations/insert/#optimize-insert-performance","title":"Optimize Insert Performance","text":"<pre><code>-- Check current insert-related settings\nSELECT name, value, description\nFROM system.settings\nWHERE name LIKE '%insert%'\n   OR name LIKE '%buffer%';\n\n-- Monitor buffer table usage\nSELECT\n    database,\n    table,\n    blocks_inserted,\n    blocks_removed,\n    rows\nFROM system.buffer_usage;\n</code></pre>"},{"location":"data-operations/insert/#batch-insert-recommendations","title":"Batch Insert Recommendations","text":"<ol> <li>Use bulk inserts instead of single-row inserts</li> <li>Consider using Buffer tables for high-frequency inserts</li> <li>Monitor and adjust buffer settings based on workload</li> <li>Use async inserts for better throughput when appropriate</li> </ol>"},{"location":"data-operations/insert/#insert-with-buffer-table","title":"Insert with Buffer Table","text":"<pre><code>-- Create buffer table\nCREATE TABLE buffer_table AS source_table\nENGINE = Buffer(database, source_table, 16, 10, 100, 10000, 1000000, 10000000, 100000000);\n\n-- Insert into buffer table\nINSERT INTO buffer_table\nSELECT * FROM temporary_data;\n</code></pre>"},{"location":"data-operations/insert/#troubleshooting","title":"Troubleshooting","text":""},{"location":"data-operations/insert/#common-issues","title":"Common Issues","text":"<pre><code>-- Check for blocked inserts\nSELECT\n    query_id,\n    user,\n    query,\n    elapsed\nFROM system.processes\nWHERE query LIKE 'INSERT%'\nORDER BY elapsed DESC;\n\n-- Monitor insert queues\nSELECT *\nFROM system.metrics\nWHERE metric LIKE '%Insert%'\n   OR metric LIKE '%Background%';\n</code></pre>"},{"location":"data-operations/insert/#data-quality-checks","title":"Data Quality Checks","text":"<pre><code>-- Verify inserted data\nSELECT\n    count() AS row_count,\n    min(timestamp) AS earliest_record,\n    max(timestamp) AS latest_record,\n    uniqExact(id) AS unique_ids\nFROM table_name\nWHERE timestamp &gt;= today() - 1;\n\n-- Check for data anomalies\nSELECT\n    toHour(timestamp) AS hour,\n    count() AS records_per_hour\nFROM table_name\nWHERE timestamp &gt;= today() - 1\nGROUP BY hour\nORDER BY hour;\n</code></pre>"},{"location":"data-operations/select/","title":"Query Operations","text":"<p>Essential commands and optimization techniques for querying data in ClickHouse.</p>"},{"location":"data-operations/select/#basic-queries","title":"Basic Queries","text":""},{"location":"data-operations/select/#simple-select","title":"Simple SELECT","text":"<pre><code>-- Basic SELECT\nSELECT *\nFROM table_name\nLIMIT 10;\n\n-- Select specific columns\nSELECT\n    column1,\n    column2,\n    count() AS count\nFROM table_name\nWHERE column1 = 'value'\nGROUP BY column1, column2\nORDER BY count DESC\nLIMIT 100;\n</code></pre>"},{"location":"data-operations/select/#filtering-and-sorting","title":"Filtering and Sorting","text":"<pre><code>-- Complex filtering\nSELECT *\nFROM table_name\nWHERE column1 IN ('value1', 'value2')\n  AND column2 BETWEEN '2024-01-01' AND '2024-02-01'\n  AND column3 LIKE '%pattern%'\nORDER BY column1 DESC\nLIMIT 1000;\n\n-- Using PREWHERE for optimization\nSELECT *\nFROM table_name\nPREWHERE column1 = 'value'\nWHERE column2 &gt; 0\nLIMIT 100;\n</code></pre>"},{"location":"data-operations/select/#advanced-queries","title":"Advanced Queries","text":""},{"location":"data-operations/select/#aggregations","title":"Aggregations","text":"<pre><code>-- Basic aggregations\nSELECT\n    toStartOfHour(timestamp) AS hour,\n    count() AS events,\n    uniqExact(user_id) AS unique_users,\n    avg(value) AS avg_value,\n    quantile(0.95)(duration) AS p95_duration\nFROM table_name\nGROUP BY hour\nORDER BY hour DESC;\n\n-- Complex aggregations\nSELECT\n    user_id,\n    groupArray(event_type) AS events,\n    groupArrayMovingAvg(5)(value) AS moving_avg\nFROM table_name\nGROUP BY user_id\nHAVING length(events) &gt; 10;\n</code></pre>"},{"location":"data-operations/select/#joins","title":"Joins","text":"<pre><code>-- Inner JOIN\nSELECT\n    t1.id,\n    t1.timestamp,\n    t2.user_name\nFROM table1 AS t1\nINNER JOIN table2 AS t2\nON t1.user_id = t2.id;\n\n-- LEFT ARRAY JOIN\nSELECT\n    user_id,\n    arrayJoin(events) AS event\nFROM (\n    SELECT\n        user_id,\n        groupArray(event_type) AS events\n    FROM table_name\n    GROUP BY user_id\n);\n</code></pre>"},{"location":"data-operations/select/#query-optimization","title":"Query Optimization","text":""},{"location":"data-operations/select/#using-sample","title":"Using SAMPLE","text":"<pre><code>-- Query with sampling\nSELECT\n    count() * any(sampling_ratio) AS estimated_total,\n    avg(value) AS estimated_avg\nFROM table_name\nSAMPLE 0.1;\n\n-- Sample with offset\nSELECT count()\nFROM table_name\nSAMPLE 0.1 OFFSET 0.5;\n</code></pre>"},{"location":"data-operations/select/#materialized-views","title":"Materialized Views","text":"<pre><code>-- Query materialized view\nSELECT *\nFROM mv_table_name\nWHERE timestamp &gt;= now() - INTERVAL 1 HOUR;\n\n-- Check materialized view status\nSELECT\n    database,\n    table,\n    engine,\n    total_rows,\n    total_bytes\nFROM system.tables\nWHERE name LIKE 'mv_%';\n</code></pre>"},{"location":"data-operations/select/#performance-analysis","title":"Performance Analysis","text":""},{"location":"data-operations/select/#query-profiling","title":"Query Profiling","text":"<pre><code>-- Enable profiling\nSET query_profiler_real_time_period_ns=10000000;\nSET allow_introspection_functions=1;\n\n-- Profile query\nSELECT\n    ProfileEvents.Names AS metric,\n    ProfileEvents.Values AS value\nFROM system.query_log\nARRAY JOIN ProfileEvents\nWHERE query_id = 'your_query_id'\n  AND type = 'QueryFinish';\n</code></pre>"},{"location":"data-operations/select/#query-analysis","title":"Query Analysis","text":"<pre><code>-- Analyze query performance\nSELECT\n    query,\n    read_rows,\n    read_bytes,\n    written_rows,\n    written_bytes,\n    memory_usage,\n    query_duration_ms\nFROM system.query_log\nWHERE type &gt;= 2\n  AND event_date &gt;= today() - 1\nORDER BY memory_usage DESC\nLIMIT 10;\n</code></pre>"},{"location":"data-operations/select/#best-practices","title":"Best Practices","text":""},{"location":"data-operations/select/#query-optimization-tips","title":"Query Optimization Tips","text":"<pre><code>-- Check table statistics\nSELECT\n    table,\n    sum(rows) AS total_rows,\n    formatReadableSize(sum(bytes)) AS total_size,\n    min(min_date) AS min_date,\n    max(max_date) AS max_date\nFROM system.parts\nWHERE active\nGROUP BY table;\n\n-- Analyze column cardinality\nSELECT\n    column_name,\n    uniqExact(column_value) AS cardinality\nFROM (\n    SELECT\n        arrayJoin(['column1', 'column2']) AS column_name,\n        column1 AS column_value\n    FROM table_name\n);\n</code></pre>"},{"location":"data-operations/select/#common-optimizations","title":"Common Optimizations","text":"<ol> <li>Use PREWHERE for filtering</li> <li>Leverage materialized views for common queries</li> <li>Use appropriate indexes (ORDER BY columns)</li> <li>Consider sampling for approximate results</li> <li>Use FINAL modifier only when necessary</li> </ol>"},{"location":"data-operations/select/#query-monitoring","title":"Query Monitoring","text":"<pre><code>-- Monitor long-running queries\nSELECT\n    query_id,\n    user,\n    query,\n    read_rows,\n    read_bytes,\n    elapsed,\n    memory_usage\nFROM system.processes\nWHERE elapsed &gt; 10\nORDER BY elapsed DESC;\n\n-- Check query cache usage\nSELECT\n    metric,\n    value\nFROM system.metrics\nWHERE metric LIKE '%Cache%';\n</code></pre>"},{"location":"data-operations/select/#troubleshooting","title":"Troubleshooting","text":""},{"location":"data-operations/select/#memory-usage","title":"Memory Usage","text":"<pre><code>-- Check memory-intensive queries\nSELECT\n    query,\n    peak_memory_usage,\n    memory_usage,\n    query_duration_ms\nFROM system.query_log\nWHERE event_date &gt;= today() - 1\nORDER BY peak_memory_usage DESC\nLIMIT 10;\n</code></pre>"},{"location":"data-operations/select/#query-errors","title":"Query Errors","text":"<pre><code>-- Find failed queries\nSELECT\n    event_time,\n    query,\n    exception,\n    stack_trace\nFROM system.query_log\nWHERE event_date &gt;= today() - 1\n  AND exception != ''\nORDER BY event_time DESC;\n</code></pre>"},{"location":"data-operations/update-delete/","title":"Update and Delete Operations","text":"<p>Commands and best practices for updating and deleting data in ClickHouse.</p>"},{"location":"data-operations/update-delete/#alter-table-mutations","title":"ALTER TABLE MUTATIONS","text":""},{"location":"data-operations/update-delete/#basic-update","title":"Basic UPDATE","text":"<pre><code>-- Update specific values\nALTER TABLE table_name\nUPDATE column1 = 'new_value'\nWHERE column2 = 'condition';\n\n-- Update with expression\nALTER TABLE table_name\nUPDATE column1 = column2 * 2\nWHERE column3 &gt; 100;\n</code></pre>"},{"location":"data-operations/update-delete/#basic-delete","title":"Basic DELETE","text":"<pre><code>-- Delete specific rows\nALTER TABLE table_name\nDELETE WHERE column1 = 'value';\n\n-- Delete with complex condition\nALTER TABLE table_name\nDELETE WHERE (column1 = 'value1' AND column2 &gt; 100)\n   OR (column3 LIKE '%pattern%');\n</code></pre>"},{"location":"data-operations/update-delete/#monitoring-mutations","title":"Monitoring Mutations","text":""},{"location":"data-operations/update-delete/#check-mutation-status","title":"Check Mutation Status","text":"<pre><code>-- View active mutations\nSELECT\n    database,\n    table,\n    mutation_id,\n    command,\n    create_time,\n    is_done\nFROM system.mutations\nWHERE is_done = 0;\n\n-- View completed mutations\nSELECT\n    database,\n    table,\n    mutation_id,\n    command,\n    create_time,\n    is_done,\n    parts_to_do_names\nFROM system.mutations\nWHERE is_done = 1\nORDER BY create_time DESC\nLIMIT 10;\n</code></pre>"},{"location":"data-operations/update-delete/#track-mutation-progress","title":"Track Mutation Progress","text":"<pre><code>-- Monitor mutation progress\nSELECT\n    database,\n    table,\n    mutation_id,\n    create_time,\n    parts_to_do,\n    is_done,\n    latest_failed_part,\n    latest_fail_reason\nFROM system.mutations\nWHERE table = 'table_name'\nORDER BY create_time DESC;\n</code></pre>"},{"location":"data-operations/update-delete/#advanced-operations","title":"Advanced Operations","text":""},{"location":"data-operations/update-delete/#conditional-updates","title":"Conditional Updates","text":"<pre><code>-- Update with CASE statement\nALTER TABLE table_name\nUPDATE column1 = CASE\n    WHEN column2 &gt; 100 THEN 'high'\n    WHEN column2 &gt; 50 THEN 'medium'\n    ELSE 'low'\nEND\nWHERE column2 IS NOT NULL;\n\n-- Update multiple columns\nALTER TABLE table_name\nUPDATE\n    column1 = column1 * 2,\n    column2 = 'updated',\n    column3 = now()\nWHERE column4 IN (1, 2, 3);\n</code></pre>"},{"location":"data-operations/update-delete/#batch-operations","title":"Batch Operations","text":"<pre><code>-- Delete in batches\nALTER TABLE table_name\nDELETE WHERE column1 IN (\n    SELECT id\n    FROM batch_delete_table\n    WHERE status = 'to_delete'\n);\n\n-- Update in batches\nALTER TABLE table_name\nUPDATE column1 = 'updated'\nWHERE column2 IN (\n    SELECT id\n    FROM batch_update_table\n    WHERE needs_update = 1\n);\n</code></pre>"},{"location":"data-operations/update-delete/#best-practices","title":"Best Practices","text":""},{"location":"data-operations/update-delete/#performance-optimization","title":"Performance Optimization","text":"<pre><code>-- Check parts affected by mutation\nSELECT\n    database,\n    table,\n    mutation_id,\n    parts_to_do,\n    parts_to_do_names\nFROM system.mutations\nWHERE is_done = 0;\n\n-- Monitor system resources during mutation\nSELECT\n    metric,\n    value\nFROM system.metrics\nWHERE metric LIKE '%Mutation%';\n</code></pre>"},{"location":"data-operations/update-delete/#mutation-management","title":"Mutation Management","text":"<pre><code>-- Kill stuck mutation\nKILL MUTATION\nWHERE table = 'table_name'\n  AND mutation_id = 'mutation_id';\n\n-- Check mutation errors\nSELECT\n    database,\n    table,\n    mutation_id,\n    latest_fail_reason,\n    latest_failed_part\nFROM system.mutations\nWHERE latest_fail_reason != '';\n</code></pre>"},{"location":"data-operations/update-delete/#data-maintenance","title":"Data Maintenance","text":""},{"location":"data-operations/update-delete/#regular-cleanup","title":"Regular Cleanup","text":"<pre><code>-- Delete old data\nALTER TABLE table_name\nDELETE WHERE timestamp &lt; now() - INTERVAL 90 DAY;\n\n-- Update expired records\nALTER TABLE table_name\nUPDATE status = 'expired'\nWHERE expiry_date &lt; now()\n  AND status = 'active';\n</code></pre>"},{"location":"data-operations/update-delete/#data-quality","title":"Data Quality","text":"<pre><code>-- Fix invalid values\nALTER TABLE table_name\nUPDATE\n    numeric_column = 0\nWHERE numeric_column &lt; 0;\n\n-- Standardize data\nALTER TABLE table_name\nUPDATE\n    string_column = upperUTF8(string_column)\nWHERE string_column != upperUTF8(string_column);\n</code></pre>"},{"location":"data-operations/update-delete/#troubleshooting","title":"Troubleshooting","text":""},{"location":"data-operations/update-delete/#common-issues","title":"Common Issues","text":"<pre><code>-- Check for blocked mutations\nSELECT\n    database,\n    table,\n    mutation_id,\n    create_time,\n    latest_fail_reason\nFROM system.mutations\nWHERE is_done = 0\n  AND create_time &lt; now() - INTERVAL 1 HOUR;\n\n-- Monitor mutation impact\nSELECT\n    table,\n    sum(rows) AS total_rows,\n    formatReadableSize(sum(bytes)) AS total_size\nFROM system.parts\nWHERE table = 'table_name'\n  AND active\nGROUP BY table;\n</code></pre>"},{"location":"data-operations/update-delete/#best-practices-summary","title":"Best Practices Summary","text":"<ol> <li>Always use WHERE clause to limit the scope of mutations</li> <li>Monitor mutation progress and resource usage</li> <li>Consider breaking large mutations into smaller batches</li> <li>Have a rollback plan for large-scale mutations</li> <li>Schedule mutations during off-peak hours</li> <li>Regular monitoring of mutation performance and status</li> </ol>"},{"location":"data-operations/update-delete/#mutation-settings","title":"Mutation Settings","text":"<pre><code>-- Check mutation-related settings\nSELECT\n    name,\n    value,\n    description\nFROM system.settings\nWHERE name LIKE '%mutation%'\n   OR name LIKE '%alter%';\n\n-- Monitor mutation metrics\nSELECT *\nFROM system.metrics\nWHERE metric LIKE '%Mutation%'\n   OR metric LIKE '%Alter%';\n</code></pre>"},{"location":"system-commands/monitoring/","title":"System Monitoring","text":"<p>Essential commands for monitoring and diagnosing ClickHouse system performance.</p>"},{"location":"system-commands/monitoring/#system-health","title":"System Health","text":""},{"location":"system-commands/monitoring/#basic-health-checks","title":"Basic Health Checks","text":"<pre><code>-- Check system version and uptime\nSELECT\n    version() AS version,\n    uptime() AS uptime_seconds,\n    formatReadableTimeDelta(uptime()) AS uptime_readable;\n\n-- Check system settings\nSELECT\n    name,\n    value,\n    changed,\n    description\nFROM system.settings\nWHERE changed = 1;\n</code></pre>"},{"location":"system-commands/monitoring/#resource-usage","title":"Resource Usage","text":"<pre><code>-- Memory usage\nSELECT\n    metric,\n    value,\n    description\nFROM system.metrics\nWHERE metric LIKE '%Memory%'\nORDER BY metric;\n\n-- CPU usage\nSELECT *\nFROM system.metrics\nWHERE metric LIKE '%CPU%'\n   OR metric LIKE '%Thread%';\n</code></pre>"},{"location":"system-commands/monitoring/#query-monitoring","title":"Query Monitoring","text":""},{"location":"system-commands/monitoring/#active-queries","title":"Active Queries","text":"<pre><code>-- List running queries\nSELECT\n    query_id,\n    user,\n    address,\n    query,\n    read_rows,\n    read_bytes,\n    total_rows_approx,\n    formatReadableSize(memory_usage) AS memory,\n    elapsed\nFROM system.processes\nORDER BY elapsed DESC;\n\n-- Find long-running queries\nSELECT\n    query_id,\n    user,\n    query,\n    elapsed,\n    formatReadableSize(memory_usage) AS memory\nFROM system.processes\nWHERE elapsed &gt; 60\nORDER BY elapsed DESC;\n</code></pre>"},{"location":"system-commands/monitoring/#query-history","title":"Query History","text":"<pre><code>-- Recent query statistics\nSELECT\n    type,\n    query,\n    query_start_time,\n    query_duration_ms,\n    read_rows,\n    read_bytes,\n    result_rows,\n    result_bytes,\n    memory_usage\nFROM system.query_log\nWHERE type &gt;= 2\n  AND event_date &gt;= today() - 1\nORDER BY query_start_time DESC\nLIMIT 10;\n\n-- Failed queries\nSELECT\n    event_time,\n    query,\n    exception,\n    stack_trace\nFROM system.query_log\nWHERE event_date &gt;= today() - 1\n  AND exception != ''\nORDER BY event_time DESC;\n</code></pre>"},{"location":"system-commands/monitoring/#storage-monitoring","title":"Storage Monitoring","text":""},{"location":"system-commands/monitoring/#disk-usage","title":"Disk Usage","text":"<pre><code>-- Overall disk usage\nSELECT\n    name,\n    path,\n    formatReadableSize(free_space) AS free,\n    formatReadableSize(total_space) AS total,\n    formatReadableSize(keep_free_space) AS reserved\nFROM system.disks;\n\n-- Database sizes\nSELECT\n    database,\n    formatReadableSize(sum(bytes_on_disk)) AS disk_size,\n    count() AS total_tables,\n    sum(rows) AS total_rows\nFROM system.parts\nWHERE active\nGROUP BY database\nORDER BY sum(bytes_on_disk) DESC;\n</code></pre>"},{"location":"system-commands/monitoring/#table-storage","title":"Table Storage","text":"<pre><code>-- Table sizes and row counts\nSELECT\n    database,\n    table,\n    formatReadableSize(sum(bytes)) AS size,\n    sum(rows) AS row_count,\n    max(modification_time) AS last_modified,\n    count() AS part_count\nFROM system.parts\nWHERE active\nGROUP BY database, table\nORDER BY sum(bytes) DESC;\n\n-- Storage by part\nSELECT\n    database,\n    table,\n    partition,\n    name AS part_name,\n    formatReadableSize(bytes) AS part_size,\n    rows,\n    modification_time\nFROM system.parts\nWHERE active\nORDER BY bytes DESC\nLIMIT 10;\n</code></pre>"},{"location":"system-commands/monitoring/#performance-monitoring","title":"Performance Monitoring","text":""},{"location":"system-commands/monitoring/#system-metrics","title":"System Metrics","text":"<pre><code>-- Key performance metrics\nSELECT *\nFROM system.metrics\nWHERE metric IN (\n    'Query',\n    'QueryThread',\n    'QueryPreempted',\n    'TCPConnection',\n    'HTTPConnection',\n    'InterserverConnection',\n    'ReadbackgroundPoolTask'\n);\n\n-- Asynchronous metrics\nSELECT *\nFROM system.asynchronous_metrics\nWHERE metric LIKE '%RWLock%'\n   OR metric LIKE '%Thread%'\n   OR metric LIKE '%Memory%';\n</code></pre>"},{"location":"system-commands/monitoring/#background-operations","title":"Background Operations","text":"<pre><code>-- Check merge operations\nSELECT *\nFROM system.merges\nWHERE is_mutation = 0;\n\n-- Monitor background tasks\nSELECT *\nFROM system.background_processing_pool;\n</code></pre>"},{"location":"system-commands/monitoring/#replication-status","title":"Replication Status","text":""},{"location":"system-commands/monitoring/#replica-health","title":"Replica Health","text":"<pre><code>-- Check replica status\nSELECT\n    database,\n    table,\n    is_leader,\n    is_readonly,\n    absolute_delay,\n    queue_size,\n    inserts_in_queue,\n    merges_in_queue\nFROM system.replicas\nORDER BY absolute_delay DESC;\n\n-- Find replication issues\nSELECT\n    database,\n    table,\n    total_replicas,\n    active_replicas,\n    is_readonly,\n    is_session_expired,\n    future_parts,\n    parts_to_check\nFROM system.replicas\nWHERE is_readonly\n   OR is_session_expired\n   OR parts_to_check &gt; 0;\n</code></pre>"},{"location":"system-commands/monitoring/#system-diagnostics","title":"System Diagnostics","text":""},{"location":"system-commands/monitoring/#error-monitoring","title":"Error Monitoring","text":"<pre><code>-- Check system errors\nSELECT\n    time,\n    level,\n    message\nFROM system.text_log\nWHERE level &gt;= 'Error'\n  AND event_date &gt;= today() - 1\nORDER BY time DESC;\n\n-- Monitor warnings\nSELECT\n    time,\n    level,\n    message\nFROM system.text_log\nWHERE level = 'Warning'\n  AND event_date &gt;= today() - 1\nORDER BY time DESC;\n</code></pre>"},{"location":"system-commands/monitoring/#configuration-checks","title":"Configuration Checks","text":"<pre><code>-- Check important settings\nSELECT\n    name,\n    value,\n    changed,\n    description\nFROM system.settings\nWHERE name IN (\n    'max_memory_usage',\n    'max_concurrent_queries',\n    'max_connections',\n    'max_table_size_to_drop',\n    'max_partition_size_to_drop'\n);\n\n-- Review access rights\nSELECT\n    user,\n    access_type,\n    database,\n    table,\n    column,\n    is_partial_revoke\nFROM system.access_rights\nORDER BY user, access_type;\n</code></pre>"},{"location":"system-commands/performance/","title":"Performance Optimization","text":"<p>Essential commands and techniques for optimizing ClickHouse performance.</p>"},{"location":"system-commands/performance/#query-performance","title":"Query Performance","text":""},{"location":"system-commands/performance/#query-analysis","title":"Query Analysis","text":"<pre><code>-- Analyze query performance\nSELECT\n    query,\n    query_duration_ms,\n    read_rows,\n    read_bytes,\n    written_rows,\n    written_bytes,\n    result_rows,\n    result_bytes,\n    memory_usage\nFROM system.query_log\nWHERE type &gt;= 2\n  AND event_date &gt;= today() - 1\nORDER BY query_duration_ms DESC\nLIMIT 10;\n\n-- Query profiling\nSELECT\n    ProfileEvents.Names AS metric,\n    ProfileEvents.Values AS value\nFROM system.query_log\nARRAY JOIN ProfileEvents\nWHERE query_id = 'your_query_id'\n  AND type = 'QueryFinish';\n</code></pre>"},{"location":"system-commands/performance/#slow-queries","title":"Slow Queries","text":"<pre><code>-- Find slow queries\nSELECT\n    query_id,\n    user,\n    query,\n    read_rows,\n    read_bytes,\n    elapsed,\n    memory_usage\nFROM system.processes\nWHERE elapsed &gt; 10\nORDER BY elapsed DESC;\n\n-- Analyze query patterns\nSELECT\n    user,\n    count() AS query_count,\n    avg(query_duration_ms) AS avg_duration,\n    max(query_duration_ms) AS max_duration,\n    sum(memory_usage) AS total_memory\nFROM system.query_log\nWHERE type &gt;= 2\n  AND event_date &gt;= today() - 1\nGROUP BY user\nORDER BY avg_duration DESC;\n</code></pre>"},{"location":"system-commands/performance/#memory-management","title":"Memory Management","text":""},{"location":"system-commands/performance/#memory-usage","title":"Memory Usage","text":"<pre><code>-- Current memory usage\nSELECT\n    metric,\n    value,\n    description\nFROM system.metrics\nWHERE metric LIKE '%Memory%'\nORDER BY metric;\n\n-- Memory usage by query\nSELECT\n    query_id,\n    user,\n    query,\n    formatReadableSize(memory_usage) AS memory,\n    elapsed\nFROM system.processes\nORDER BY memory_usage DESC;\n</code></pre>"},{"location":"system-commands/performance/#memory-settings","title":"Memory Settings","text":"<pre><code>-- Check memory-related settings\nSELECT\n    name,\n    value,\n    changed,\n    description\nFROM system.settings\nWHERE name LIKE '%memory%'\n   OR name LIKE '%buffer%';\n\n-- Monitor memory limits\nSELECT *\nFROM system.metrics\nWHERE metric IN (\n    'MemoryTracking',\n    'MemoryTrackingInBackgroundProcessingPool',\n    'MemoryTrackingInBackgroundMoveProcessingPool',\n    'MemoryTrackingInBackgroundSchedulePool'\n);\n</code></pre>"},{"location":"system-commands/performance/#storage-optimization","title":"Storage Optimization","text":""},{"location":"system-commands/performance/#table-optimization","title":"Table Optimization","text":"<pre><code>-- Find tables with many parts\nSELECT\n    database,\n    table,\n    count() AS parts_count,\n    sum(rows) AS total_rows,\n    formatReadableSize(sum(bytes)) AS total_size\nFROM system.parts\nWHERE active\nGROUP BY database, table\nHAVING parts_count &gt; 10\nORDER BY parts_count DESC;\n\n-- Check compression ratio\nSELECT\n    database,\n    table,\n    formatReadableSize(sum(data_compressed_bytes)) AS compressed,\n    formatReadableSize(sum(data_uncompressed_bytes)) AS uncompressed,\n    round(sum(data_uncompressed_bytes) / sum(data_compressed_bytes), 2) AS ratio\nFROM system.parts\nWHERE active\nGROUP BY database, table\nORDER BY ratio DESC;\n</code></pre>"},{"location":"system-commands/performance/#part-management","title":"Part Management","text":"<pre><code>-- Monitor part merges\nSELECT\n    database,\n    table,\n    partition_id,\n    elapsed,\n    progress,\n    num_parts,\n    result_part_name,\n    total_size_bytes_compressed,\n    is_mutation\nFROM system.merges\nORDER BY elapsed DESC;\n\n-- Check part distribution\nSELECT\n    database,\n    table,\n    partition,\n    count() AS part_count,\n    sum(rows) AS total_rows,\n    formatReadableSize(sum(bytes)) AS total_size\nFROM system.parts\nWHERE active\nGROUP BY database, table, partition\nORDER BY part_count DESC;\n</code></pre>"},{"location":"system-commands/performance/#system-optimization","title":"System Optimization","text":""},{"location":"system-commands/performance/#background-tasks","title":"Background Tasks","text":"<pre><code>-- Monitor background operations\nSELECT *\nFROM system.background_processing_pool\nORDER BY elapsed DESC;\n\n-- Check background metrics\nSELECT *\nFROM system.metrics\nWHERE metric LIKE '%Background%'\nORDER BY metric;\n</code></pre>"},{"location":"system-commands/performance/#resource-usage","title":"Resource Usage","text":"<pre><code>-- CPU usage metrics\nSELECT *\nFROM system.metrics\nWHERE metric LIKE '%CPU%'\n   OR metric LIKE '%Thread%';\n\n-- IO metrics\nSELECT *\nFROM system.metrics\nWHERE metric LIKE '%IO%'\n   OR metric LIKE '%Disk%';\n</code></pre>"},{"location":"system-commands/performance/#performance-tuning","title":"Performance Tuning","text":""},{"location":"system-commands/performance/#settings-optimization","title":"Settings Optimization","text":"<pre><code>-- Important performance settings\nSELECT\n    name,\n    value,\n    changed,\n    description\nFROM system.settings\nWHERE name IN (\n    'max_threads',\n    'max_insert_threads',\n    'max_compress_block_size',\n    'min_compress_block_size',\n    'max_query_size',\n    'max_memory_usage',\n    'max_memory_usage_for_user'\n);\n\n-- Check current optimization settings\nSELECT\n    name,\n    value,\n    changed,\n    description\nFROM system.settings\nWHERE name LIKE '%optimize%'\n   OR name LIKE '%parallel%';\n</code></pre>"},{"location":"system-commands/performance/#query-cache","title":"Query Cache","text":"<pre><code>-- Monitor query cache\nSELECT *\nFROM system.metrics\nWHERE metric LIKE '%Cache%';\n\n-- Check cache effectiveness\nSELECT\n    metric,\n    value\nFROM system.metrics\nWHERE metric IN (\n    'MarkCacheBytes',\n    'MarkCacheFiles',\n    'UncompressedCacheBytes',\n    'UncompressedCacheCells'\n);\n</code></pre>"},{"location":"system-commands/performance/#performance-monitoring","title":"Performance Monitoring","text":""},{"location":"system-commands/performance/#real-time-metrics","title":"Real-time Metrics","text":"<pre><code>-- Current performance metrics\nSELECT\n    metric,\n    value,\n    description\nFROM system.metrics\nWHERE metric IN (\n    'Query',\n    'QueryThread',\n    'QueryPreempted',\n    'QueryMemoryTracking',\n    'CompressedReadBufferBlocks',\n    'CompressedReadBufferBytes'\n);\n\n-- System loads\nSELECT *\nFROM system.asynchronous_metrics\nWHERE metric LIKE '%Load%'\n   OR metric LIKE '%CPU%'\n   OR metric LIKE '%Memory%';\n</code></pre>"},{"location":"system-commands/performance/#performance-trends","title":"Performance Trends","text":"<pre><code>-- Query performance over time\nSELECT\n    toStartOfHour(event_time) AS hour,\n    count() AS query_count,\n    avg(query_duration_ms) AS avg_duration,\n    max(query_duration_ms) AS max_duration,\n    sum(memory_usage) AS total_memory\nFROM system.query_log\nWHERE type &gt;= 2\n  AND event_date &gt;= today() - 1\nGROUP BY hour\nORDER BY hour DESC;\n\n-- Resource usage trends\nSELECT\n    toStartOfHour(event_time) AS hour,\n    avg(read_rows) AS avg_read_rows,\n    avg(read_bytes) AS avg_read_bytes,\n    avg(memory_usage) AS avg_memory_usage\nFROM system.query_log\nWHERE type &gt;= 2\n  AND event_date &gt;= today() - 1\nGROUP BY hour\nORDER BY hour DESC;\n</code></pre>"}]}