{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ClickHouse SQL Reference Sheet","text":"<p>A comprehensive SQL command reference sheet for ClickHouse Cloud field team. This guide provides essential SQL commands, best practices, and optimization techniques for working with ClickHouse deployments.</p>"},{"location":"#quick-health-checks","title":"\ud83d\udcca Quick Health Checks","text":"<p>Essential commands for quick system health verification:</p> <pre><code>-- Basic health check queries\nSELECT version();                    -- Check ClickHouse version\nSELECT 1;                           -- Simple connectivity test\nSELECT currentDatabase();           -- Current database context\nSELECT currentUser();               -- Current user context\n\n-- Quick system metrics overview\nSELECT metric, value, description\nFROM system.metrics\nLIMIT 5;                           -- Preview key system metrics\n</code></pre> <p>For detailed system monitoring queries, see System Monitoring Guide.</p>"},{"location":"#query-analysis-and-performance","title":"\ud83d\udd0d Query Analysis and Performance","text":""},{"location":"#query-execution-analysis","title":"Query Execution Analysis","text":"<pre><code>-- Analyze query execution details including granules and parts\nSELECT\n    query_id,\n    user,\n    query,\n    read_rows,\n    read_bytes,\n    result_rows,\n    result_bytes,\n    memory_usage,\n    -- Query execution details\n    formatReadableSize(memory_usage) AS memory_used,\n    formatReadableQuantity(read_rows) AS rows_read,\n    formatReadableSize(read_bytes) AS bytes_read,\n    -- Parts and granules information\n    read_backup_pieces_marks AS granules_read,      -- Number of granules processed\n    marks_bytes AS granules_bytes,                  -- Bytes of mark (granule) data read\n    profileEvents['SelectedMarks'] AS marks_selected -- Total marks selected for reading\nFROM system.query_log\nWHERE type = 'QueryFinish'                         -- Only completed queries\n  AND event_date &gt;= today() - 1                    -- Last 24 hours\n  AND query NOT LIKE '%system%'                    -- Exclude system queries\nORDER BY memory_usage DESC\nLIMIT 10;\n\n-- Detailed granule analysis for specific queries\nSELECT\n    query_id,\n    event_time,\n    query,\n    -- Granule efficiency metrics\n    read_rows / profileEvents['SelectedMarks'] AS rows_per_granule,\n    formatReadableSize(read_bytes / profileEvents['SelectedMarks']) AS bytes_per_granule,\n    -- Part reading efficiency\n    profileEvents['SelectedParts'] AS parts_selected,\n    profileEvents['SelectedRanges'] AS ranges_selected,\n    -- Memory efficiency\n    formatReadableSize(peak_memory_usage) AS peak_memory,\n    formatReadableSize(memory_usage) AS avg_memory\nFROM system.query_log\nWHERE type = 'QueryFinish'\n  AND query LIKE '%your_table_name%'              -- Filter for specific table\n  AND event_date &gt;= today() - 1\nORDER BY event_time DESC\nLIMIT 10;\n</code></pre> <p>For detailed performance monitoring, see Performance Analysis Guide.</p>"},{"location":"#query-performance-patterns","title":"Query Performance Patterns","text":"<pre><code>-- Identify slow queries and their patterns\nSELECT\n    user,\n    client_hostname,\n    count() AS query_count,\n    avg(query_duration_ms) AS avg_duration_ms,\n    max(query_duration_ms) AS max_duration_ms,\n    sum(read_rows) AS total_rows_processed,\n    sum(memory_usage) AS total_memory_used,\n    -- Query pattern analysis\n    arrayJoin(extractAll(query, '^\\\\s*(SELECT|INSERT|CREATE|ALTER|DROP)')) AS query_type,\n    -- Resource usage patterns\n    avg(read_bytes) AS avg_bytes_per_query,\n    max(read_bytes) AS max_bytes_per_query\nFROM system.query_log\nWHERE type = 'QueryFinish'\n  AND event_date &gt;= today() - 7                    -- Last week's data\nGROUP BY user, client_hostname, query_type\nHAVING avg_duration_ms &gt; 1000                      -- Queries averaging over 1 second\nORDER BY avg_duration_ms DESC;\n\n-- Analyze query execution stages\nSELECT\n    query_id,\n    event_time,\n    query_kind,\n    exception,\n    stack_trace,\n    -- Timing analysis\n    query_start_time,\n    query_duration_ms,\n    -- Resource usage breakdown\n    read_rows,\n    read_bytes,\n    written_rows,\n    written_bytes,\n    result_rows,\n    result_bytes,\n    -- Memory usage analysis\n    memory_usage,\n    peak_memory_usage\nFROM system.query_log\nWHERE type IN ('QueryStart', 'QueryFinish', 'ExceptionWhileProcessing')\n  AND event_date &gt;= today() - 1\nORDER BY query_id, event_time;\n</code></pre>"},{"location":"#cost-and-resource-analysis","title":"Cost and Resource Analysis","text":"<pre><code>-- Top 10 Most Expensive Queries by Cost\nSELECT\n    query_id,\n    ROUND(AVG(query_duration_ms / 1000), 5) AS avg_duration_seconds,\n    concat(ROUND(MAX((memory_usage / 1024) / 1024)), ' MB') AS mem_usage_MB,\n    concat('$', ROUND((AVG((memory_usage / 1024) / 1024) * ((0.29874 / 8192) / 3600000)) * AVG(query_duration_ms), 5)) AS cost_per_query\nFROM clusterAllReplicas(default, system.query_log)\nWHERE (type = 'QueryFinish')\n  AND (query_kind = 'Select')\n  AND (user NOT ILIKE '%internal%')\nGROUP BY query_id\nHAVING MAX((memory_usage / 1024) / 1024) &gt; 1\nORDER BY cost_per_query DESC\nLIMIT 10;\n\n-- Detailed Query Performance Metrics\nSELECT\n    toStartOfHour(event_time) AS ts,\n    countDistinct(normalized_query_hash) AS query_uniq,\n    count() AS query_count,\n    round(query_count / 60) AS qps,\n    min(query_duration_ms) AS time_min,\n    round(quantile(0.5)(query_duration_ms)) AS time_p50,\n    round(quantile(0.9)(query_duration_ms)) AS time_p90,\n    round(quantile(0.99)(query_duration_ms)) AS time_p99,\n    max(query_duration_ms) AS time_max,\n    formatReadableSize(min(memory_usage)) AS mem_min,\n    formatReadableSize(quantile(0.5)(memory_usage)) AS mem_p50,\n    formatReadableSize(quantile(0.9)(memory_usage)) AS mem_p90,\n    formatReadableSize(max(memory_usage)) AS mem_max,\n    formatReadableSize(sum(memory_usage)) AS mem_sum\nFROM clusterAllReplicas(default, merge(system, '^query_log*'))\nWHERE (type = 'QueryFinish')\n  AND (query_kind = 'Select')\n  AND (event_time &gt;= (now() - toIntervalDay(3)))\n  AND (event_time &lt;= now())\n  AND (user NOT ILIKE '%internal%')\nGROUP BY ts\nORDER BY ts ASC\nSETTINGS skip_unavailable_shards = 1;\n</code></pre>"},{"location":"#system-performance-monitoring","title":"\ud83d\udcc8 System Performance Monitoring","text":""},{"location":"#memory-usage-analysis","title":"Memory Usage Analysis","text":"<pre><code>-- Detailed memory usage by query type\nSELECT\n    user,\n    query_kind,\n    count() AS query_count,\n    -- Memory usage statistics\n    formatReadableSize(avg(memory_usage)) AS avg_memory,\n    formatReadableSize(max(memory_usage)) AS max_memory,\n    formatReadableSize(sum(memory_usage)) AS total_memory,\n    -- Memory efficiency metrics\n    round(avg(memory_usage / nullIf(read_rows, 0)), 2) AS bytes_per_row,\n    round(avg(peak_memory_usage / nullIf(memory_usage, 0)), 2) AS memory_usage_ratio\nFROM system.query_log\nWHERE type = 'QueryFinish'\n  AND event_date &gt;= today() - 1\nGROUP BY user, query_kind\nORDER BY total_memory DESC\nLIMIT 20;\n\n-- Memory usage trends\nSELECT\n    toStartOfHour(event_time) AS hour,\n    -- Memory usage over time\n    formatReadableSize(avg(memory_usage)) AS avg_memory_per_query,\n    formatReadableSize(max(memory_usage)) AS max_memory_per_query,\n    -- Query patterns\n    count() AS query_count,\n    sum(read_rows) AS total_rows_processed\nFROM system.query_log\nWHERE type = 'QueryFinish'\n  AND event_date &gt;= today() - 1\nGROUP BY hour\nORDER BY hour DESC;\n</code></pre>"},{"location":"#storage-and-compression-analysis","title":"Storage and Compression Analysis","text":"<pre><code>-- Table storage efficiency analysis\nSELECT\n    database,\n    table,\n    -- Size metrics\n    formatReadableSize(sum(data_compressed_bytes)) AS compressed_size,\n    formatReadableSize(sum(data_uncompressed_bytes)) AS uncompressed_size,\n    -- Compression analysis\n    round(sum(data_uncompressed_bytes) / sum(data_compressed_bytes), 2) AS compression_ratio,\n    -- Part analysis\n    count() AS part_count,\n    sum(rows) AS total_rows,\n    -- Storage efficiency\n    round(sum(data_compressed_bytes) / sum(rows), 2) AS bytes_per_row_compressed,\n    round(sum(data_uncompressed_bytes) / sum(rows), 2) AS bytes_per_row_uncompressed\nFROM system.parts\nWHERE active\nGROUP BY database, table\nORDER BY compression_ratio DESC;\n\n-- Detailed part analysis\nSELECT\n    database,\n    table,\n    partition_id,\n    -- Part metrics\n    formatReadableSize(data_compressed_bytes) AS compressed_size,\n    formatReadableSize(data_uncompressed_bytes) AS uncompressed_size,\n    compression_ratio,\n    rows,\n    -- Mark (granule) statistics\n    marks_size,\n    marks_bytes,\n    -- Modification tracking\n    modification_time,\n    remove_time\nFROM system.parts\nWHERE active\n  AND database = 'your_database'    -- Replace with your database\nORDER BY data_compressed_bytes DESC\nLIMIT 20;\n</code></pre>"},{"location":"#cluster-health-and-resources","title":"Cluster Health and Resources","text":"<pre><code>-- Check Cluster Size and Resources\nSELECT *\nFROM clusterAllReplicas('default', view(\n    SELECT\n        hostname() AS server,\n        getSetting('max_threads') as cpu_cores,\n        formatReadableSize(getSetting('max_memory_usage')) as memory\n    FROM system.one\n))\nORDER BY server ASC\nSETTINGS skip_unavailable_shards = 1;\n\n-- OR\nSELECT\n    now(),\n    hostname(),\n    getSetting('max_threads'),\n    formatReadableSize(getSetting('max_memory_usage'))\nFROM clusterAllReplicas(default, system.one)\n</code></pre>"},{"location":"#cache-performance-analysis","title":"Cache Performance Analysis","text":"<pre><code>-- Compare Cache vs Storage Read Performance\nSELECT\n   hostName(),\n   query_id,\n   query_start_time_microseconds,\n   query_duration_ms,\n   read_rows,\n   formatReadableSize(ProfileEvents['CachedReadBufferReadFromCacheBytes']) AS read_from_cache,\n   formatReadableSize(ProfileEvents['CachedReadBufferReadFromSourceBytes']) AS read_from_storage\nFROM clusterAllReplicas('default', system.query_log)\nWHERE type = 'QueryFinish'\nORDER BY query_start_time_microseconds ASC;\n</code></pre>"},{"location":"#query-progress-monitoring","title":"Query Progress Monitoring","text":"<pre><code>-- Monitor Running Query Progress\nSELECT\n    query_id,\n    (100 * read_rows) / total_rows_approx AS progress_percentage,\n    elapsed AS elapsed_time,\n    (elapsed / (read_rows / total_rows_approx)) * (1 - (read_rows / total_rows_approx)) AS estimated_remaining_time\nFROM system.processes\nWHERE is_cancelled = 0;\n</code></pre>"},{"location":"#profile-events-analysis","title":"Profile Events Analysis","text":"<pre><code>-- Query All Profile Events\nSELECT\n    name AS metric_name,\n    value AS metric_value\nFROM system.metrics\nWHERE name LIKE 'ProfileEvent%'\nORDER BY metric_name;\n</code></pre>"},{"location":"#quick-reference","title":"Quick Reference","text":"<p>Here are some of the most frequently used commands:</p> <pre><code>-- Check ClickHouse version and health\nSELECT version();\nSELECT 1;\n\n-- List databases and tables\nSHOW DATABASES;\nSHOW TABLES;\n\n-- Monitor system\nSELECT *\nFROM system.metrics\nLIMIT 5;\n\n-- Check current queries\nSELECT query_id, user, query\nFROM system.processes\nORDER BY elapsed DESC;\n</code></pre>"},{"location":"#basic-operations","title":"Basic Operations","text":""},{"location":"#connection-management","title":"Connection Management","text":""},{"location":"#check-current-connection","title":"Check Current Connection","text":"<pre><code>SELECT\n    currentUser() AS current_user,\n    currentDatabase() AS current_database,\n    currentQueryId() AS query_id;\n</code></pre>"},{"location":"#view-active-sessions","title":"View Active Sessions","text":"<pre><code>SELECT\n    user,\n    client_hostname,\n    client_name,\n    client_version,\n    query_start_time,\n    query\nFROM system.processes\nORDER BY query_start_time DESC;\n</code></pre>"},{"location":"#database-operations","title":"Database Operations","text":""},{"location":"#list-databases","title":"List Databases","text":"<pre><code>-- Show all databases\nSHOW DATABASES;\n\n-- Get detailed information\nSELECT\n    name,\n    engine,\n    data_path,\n    metadata_path,\n    uuid\nFROM system.databases;\n</code></pre>"},{"location":"#database-management","title":"Database Management","text":"<pre><code>-- Create database\nCREATE DATABASE IF NOT EXISTS database_name;\n\n-- Drop database\nDROP DATABASE IF EXISTS database_name;\n\n-- Switch database\nUSE database_name;\n</code></pre>"},{"location":"#table-operations","title":"Table Operations","text":""},{"location":"#list-tables","title":"List Tables","text":"<pre><code>-- Show tables with details\nSELECT\n    database,\n    name AS table_name,\n    engine,\n    total_rows,\n    formatReadableSize(total_bytes) AS total_size,\n    formatReadableSize(memory_usage) AS memory_usage\nFROM system.tables\nWHERE database = currentDatabase()\nORDER BY total_bytes DESC;\n</code></pre>"},{"location":"#create-table","title":"Create Table","text":"<pre><code>CREATE TABLE IF NOT EXISTS table_name\n(\n    id UInt32,\n    timestamp DateTime,\n    event_type String,\n    user_id String,\n    metadata JSON\n)\nENGINE = MergeTree()\nORDER BY (timestamp, id);\n</code></pre>"},{"location":"#alter-table","title":"Alter Table","text":"<pre><code>-- Add column\nALTER TABLE table_name\n    ADD COLUMN IF NOT EXISTS new_column_name String;\n\n-- Modify column\nALTER TABLE table_name\n    MODIFY COLUMN column_name UInt64;\n\n-- Drop column\nALTER TABLE table_name\n    DROP COLUMN IF EXISTS column_name;\n</code></pre>"},{"location":"#data-operations","title":"Data Operations","text":""},{"location":"#insert-commands","title":"Insert Commands","text":""},{"location":"#basic-insert","title":"Basic Insert","text":"<pre><code>-- Single row\nINSERT INTO table_name (column1, column2, column3)\nVALUES ('value1', 'value2', 'value3');\n\n-- Multiple rows\nINSERT INTO table_name (column1, column2, column3)\nVALUES\n    ('value1', 'value2', 'value3'),\n    ('value4', 'value5', 'value6');\n</code></pre>"},{"location":"#insert-from-select","title":"Insert from SELECT","text":"<pre><code>INSERT INTO target_table\nSELECT *\nFROM source_table\nWHERE condition;\n</code></pre>"},{"location":"#query-operations","title":"Query Operations","text":""},{"location":"#basic-select","title":"Basic SELECT","text":"<pre><code>-- Simple query\nSELECT *\nFROM table_name\nLIMIT 10;\n\n-- With filtering and aggregation\nSELECT\n    column1,\n    count() AS count\nFROM table_name\nWHERE column2 = 'value'\nGROUP BY column1\nORDER BY count DESC;\n</code></pre>"},{"location":"#advanced-queries","title":"Advanced Queries","text":"<pre><code>-- Complex aggregations\nSELECT\n    toStartOfHour(timestamp) AS hour,\n    count() AS events,\n    uniqExact(user_id) AS unique_users,\n    avg(value) AS avg_value\nFROM table_name\nGROUP BY hour\nORDER BY hour DESC;\n\n-- Using PREWHERE\nSELECT *\nFROM table_name\nPREWHERE column1 = 'value'\nWHERE column2 &gt; 0;\n</code></pre>"},{"location":"#update-and-delete","title":"Update and Delete","text":""},{"location":"#update-data","title":"Update Data","text":"<pre><code>-- Update values\nALTER TABLE table_name\nUPDATE column1 = 'new_value'\nWHERE column2 = 'condition';\n\n-- Conditional update\nALTER TABLE table_name\nUPDATE column1 = CASE\n    WHEN column2 &gt; 100 THEN 'high'\n    WHEN column2 &gt; 50 THEN 'medium'\n    ELSE 'low'\nEND;\n</code></pre>"},{"location":"#delete-data","title":"Delete Data","text":"<pre><code>-- Delete rows\nALTER TABLE table_name\nDELETE WHERE column1 = 'value';\n\n-- Delete old data\nALTER TABLE table_name\nDELETE WHERE timestamp &lt; now() - INTERVAL 90 DAY;\n</code></pre>"},{"location":"#system-operations","title":"System Operations","text":""},{"location":"#monitoring","title":"Monitoring","text":""},{"location":"#system-health","title":"System Health","text":"<pre><code>-- Check version and uptime\nSELECT\n    version() AS version,\n    uptime() AS uptime_seconds,\n    formatReadableTimeDelta(uptime()) AS uptime_readable;\n\n-- Resource usage\nSELECT\n    metric,\n    value,\n    description\nFROM system.metrics\nWHERE metric LIKE '%Memory%'\nORDER BY metric;\n</code></pre>"},{"location":"#query-monitoring","title":"Query Monitoring","text":"<pre><code>-- Active queries\nSELECT\n    query_id,\n    user,\n    query,\n    elapsed,\n    formatReadableSize(memory_usage) AS memory\nFROM system.processes\nWHERE elapsed &gt; 60\nORDER BY elapsed DESC;\n\n-- Query history\nSELECT\n    type,\n    query,\n    query_duration_ms,\n    read_rows,\n    read_bytes,\n    memory_usage\nFROM system.query_log\nWHERE type &gt;= 2\n  AND event_date &gt;= today() - 1\nORDER BY query_start_time DESC;\n</code></pre>"},{"location":"#performance-optimization","title":"Performance Optimization","text":""},{"location":"#query-performance","title":"Query Performance","text":"<pre><code>-- Analyze slow queries\nSELECT\n    query,\n    query_duration_ms,\n    read_rows,\n    read_bytes,\n    memory_usage\nFROM system.query_log\nWHERE type &gt;= 2\nORDER BY query_duration_ms DESC\nLIMIT 10;\n\n-- Memory usage by query\nSELECT\n    query_id,\n    user,\n    formatReadableSize(memory_usage) AS memory,\n    elapsed\nFROM system.processes\nORDER BY memory_usage DESC;\n</code></pre>"},{"location":"#storage-optimization","title":"Storage Optimization","text":"<pre><code>-- Table parts analysis\nSELECT\n    database,\n    table,\n    count() AS parts_count,\n    sum(rows) AS total_rows,\n    formatReadableSize(sum(bytes)) AS total_size\nFROM system.parts\nWHERE active\nGROUP BY database, table\nHAVING parts_count &gt; 10\nORDER BY parts_count DESC;\n\n-- Compression efficiency\nSELECT\n    database,\n    table,\n    formatReadableSize(sum(data_compressed_bytes)) AS compressed,\n    formatReadableSize(sum(data_uncompressed_bytes)) AS uncompressed,\n    round(sum(data_uncompressed_bytes) / sum(data_compressed_bytes), 2) AS ratio\nFROM system.parts\nWHERE active\nGROUP BY database, table\nORDER BY ratio DESC;\n</code></pre>"},{"location":"#best-practices","title":"Best Practices","text":""},{"location":"#query-optimization","title":"Query Optimization","text":"<ol> <li>Always use <code>LIMIT</code> when querying large tables</li> <li>Use <code>PREWHERE</code> for more efficient filtering</li> <li>Leverage materialized views for common queries</li> <li>Consider sampling for approximate results</li> <li>Monitor and analyze slow queries regularly</li> </ol>"},{"location":"#data-management","title":"Data Management","text":"<ol> <li>Use bulk inserts instead of single-row inserts</li> <li>Implement proper partitioning strategies</li> <li>Regular monitoring of table sizes and parts</li> <li>Schedule maintenance operations during off-peak hours</li> <li>Keep track of mutation progress and performance</li> </ol>"},{"location":"#system-maintenance","title":"System Maintenance","text":"<ol> <li>Monitor system resources regularly</li> <li>Track query performance and patterns</li> <li>Optimize storage and compression settings</li> <li>Maintain proper backup strategies</li> <li>Regular cleanup of old data</li> </ol>"},{"location":"#troubleshooting","title":"Troubleshooting","text":""},{"location":"#common-issues","title":"Common Issues","text":"<ol> <li>Memory Usage</li> </ol> <pre><code>-- Check memory-intensive queries\nSELECT\n    query,\n    peak_memory_usage,\n    memory_usage,\n    query_duration_ms\nFROM system.query_log\nWHERE event_date &gt;= today() - 1\nORDER BY peak_memory_usage DESC;\n</code></pre> <ol> <li>Slow Queries</li> </ol> <pre><code>-- Find problematic queries\nSELECT\n    query_id,\n    user,\n    query,\n    elapsed\nFROM system.processes\nWHERE elapsed &gt; 60;\n</code></pre> <ol> <li>System Errors</li> </ol> <pre><code>-- Check error log\nSELECT\n    time,\n    level,\n    message\nFROM system.text_log\nWHERE level &gt;= 'Error'\nORDER BY time DESC;\n</code></pre>"},{"location":"#performance-issues","title":"Performance Issues","text":"<ol> <li>Check system metrics</li> <li>Analyze query patterns</li> <li>Review table structure and indexes</li> <li>Monitor background operations</li> <li>Verify resource utilization</li> </ol>"},{"location":"#advanced-query-monitoring-and-performance-analysis","title":"Advanced Query Monitoring and Performance Analysis","text":""},{"location":"#1-active-query-monitoring","title":"1. Active Query Monitoring","text":""},{"location":"#find-currently-running-queries","title":"Find Currently Running Queries","text":"<pre><code>-- Active queries with detailed performance metrics\nSELECT\n    query_id,\n    user,\n    query,\n    elapsed,\n    formatReadableSize(memory_usage) AS memory_used,\n    read_rows,\n    formatReadableSize(read_bytes) AS data_read\nFROM system.processes\nORDER BY elapsed DESC;\n\n-- Long-running queries (over 1 minute)\nSELECT\n    query_id,\n    user,\n    query,\n    elapsed,\n    formatReadableSize(memory_usage) AS memory_used\nFROM system.processes\nWHERE elapsed &gt; 60\nORDER BY elapsed DESC;\n</code></pre>"},{"location":"#2-query-performance-history","title":"2. Query Performance History","text":""},{"location":"#analyze-slow-queries","title":"Analyze Slow Queries","text":"<pre><code>-- Slow query log (last 24 hours)\nSELECT\n    event_time,\n    query,\n    query_duration_ms,\n    read_rows,\n    formatReadableSize(read_bytes) AS data_read,\n    formatReadableSize(memory_usage) AS peak_memory\nFROM system.query_log\nWHERE type = 2  -- Query\n  AND event_date &gt;= today() - 1\nORDER BY query_duration_ms DESC\nLIMIT 20;\n\n-- Query performance by user\nSELECT\n    user,\n    count() AS total_queries,\n    avg(query_duration_ms) AS avg_query_time,\n    max(query_duration_ms) AS max_query_time\nFROM system.query_log\nWHERE type = 2\nGROUP BY user\nORDER BY total_queries DESC;\n</code></pre>"},{"location":"#3-resource-consumption-analysis","title":"3. Resource Consumption Analysis","text":""},{"location":"#memory-and-cpu-metrics","title":"Memory and CPU Metrics","text":"<pre><code>-- Memory usage by query\nSELECT\n    user,\n    query_id,\n    query,\n    formatReadableSize(memory_usage) AS peak_memory,\n    formatReadableSize(peak_memory_usage) AS total_peak_memory\nFROM system.query_log\nWHERE type = 2\nORDER BY peak_memory_usage DESC\nLIMIT 20;\n\n-- CPU and thread usage\nSELECT\n    metric,\n    value,\n    description\nFROM system.metrics\nWHERE metric LIKE '%CPU%' OR metric LIKE '%Thread%';\n\n-- Disk and IO metrics\nSELECT\n    metric,\n    value,\n    description\nFROM system.metrics\nWHERE metric LIKE '%Disk%' OR metric LIKE '%IO%';\n</code></pre>"},{"location":"#4-user-management-and-rbac","title":"4. User Management and RBAC","text":""},{"location":"#user-and-role-management","title":"User and Role Management","text":"<pre><code>-- List all users\nSELECT\n    name,\n    id,\n    storage,\n    auth_type\nFROM system.users;\n\n-- List roles\nSELECT\n    name,\n    id\nFROM system.roles;\n\n-- User privileges\nSELECT\n    user_name,\n    role_name,\n    privileges\nFROM system.role_grants;\n\n-- Detailed user privileges\nSELECT\n    user_name,\n    database,\n    table,\n    column,\n    grant_type\nFROM system.grants\nORDER BY user_name, database, table;\n</code></pre>"},{"location":"#rbac-examples","title":"RBAC Examples","text":"<pre><code>-- Create a role\nCREATE ROLE analyst;\n\n-- Grant select privileges\nGRANT SELECT\nON database.table\nTO analyst;\n\n-- Create a user and assign role\nCREATE USER john\nIDENTIFIED WITH sha256_password BY 'secure_password'\nDEFAULT ROLE analyst;\n\n-- Row-level security\nCREATE ROW POLICY limited_view\nON database.table\nFOR SELECT\nUSING department = currentUser();\n</code></pre>"},{"location":"#5-system-and-database-insights","title":"5. System and Database Insights","text":""},{"location":"#cluster-and-database-information","title":"Cluster and Database Information","text":"<pre><code>-- Cluster details\nSELECT\n    cluster,\n    shard_num,\n    replica_num,\n    host_name,\n    port\nFROM system.clusters;\n\n-- Database sizes\nSELECT\n    database,\n    formatReadableSize(sum(bytes)) AS total_size,\n    count() AS total_tables\nFROM system.tables\nGROUP BY database\nORDER BY total_size DESC;\n\n-- Table sizes\nSELECT\n    database,\n    table,\n    formatReadableSize(sum(bytes)) AS total_size,\n    sum(rows) AS total_rows,\n    count() AS parts_count\nFROM system.parts\nWHERE active\nGROUP BY database, table\nORDER BY total_size DESC;\n</code></pre>"},{"location":"#6-advanced-querying-and-indexing","title":"6. Advanced Querying and Indexing","text":""},{"location":"#creating-and-analyzing-indexes","title":"Creating and Analyzing Indexes","text":"<pre><code>-- Create a data skipping index\nALTER TABLE my_table\nADD INDEX idx_name expression TYPE minmax GRANULARITY 3;\n\n-- Analyze index usage\nSELECT\n    database,\n    table,\n    name,\n    type,\n    granularity\nFROM system.data_skipping_indices;\n\n-- Full-text search with trigram index\nCREATE TABLE my_table (\n    text String,\n    INDEX text_trigram text TYPE tokenbf_v1(256, 3, 0)\n) ENGINE = MergeTree();\n</code></pre>"},{"location":"#7-query-settings-and-configuration","title":"7. Query Settings and Configuration","text":""},{"location":"#monitoring-session-settings","title":"Monitoring Session Settings","text":"<pre><code>-- View current session settings\nSELECT\n    name,\n    value\nFROM system.settings\nWHERE changed;\n\n-- Database-level settings\nSELECT\n    database,\n    engine,\n    metadata_path\nFROM system.databases;\n\n-- Table-level settings\nSELECT\n    database,\n    table,\n    engine,\n    total_rows,\n    total_bytes\nFROM system.tables;\n</code></pre>"},{"location":"#8-specific-query-monitoring","title":"8. Specific Query Monitoring","text":""},{"location":"#tracking-queries-by-user-or-table","title":"Tracking Queries by User or Table","text":"<pre><code>-- Queries by specific user\nSELECT\n    query,\n    query_duration_ms,\n    read_rows,\n    formatReadableSize(read_bytes) AS data_read\nFROM system.query_log\nWHERE user = 'john'\n  AND type = 2\nORDER BY query_duration_ms DESC;\n\n-- Queries on a specific table\nSELECT\n    user,\n    query,\n    query_duration_ms\nFROM system.query_log\nWHERE\n    lower(query) LIKE '%mytable%'\n    AND type = 2\nORDER BY query_duration_ms DESC;\n</code></pre>"},{"location":"#best-practices_1","title":"Best Practices","text":"<ol> <li>Always use <code>LIMIT</code> with large tables</li> <li>Use <code>PREWHERE</code> for more efficient filtering</li> <li>Monitor memory usage with settings like <code>max_memory_usage</code></li> <li>Use data skipping indexes for large tables</li> <li>Implement row-level security for sensitive data</li> <li>Regularly review and optimize query performance</li> <li>Always use <code>skip_unavailable_shards = 1</code> when querying across clusters to handle node failures gracefully</li> <li>Filter out internal queries using <code>user NOT ILIKE '%internal%'</code> for accurate application metrics</li> <li>Use <code>formatReadableSize()</code> for human-readable byte values</li> <li>Consider time windows in queries to avoid processing too much historical data</li> <li>Use appropriate time intervals (hour, day, etc.) based on your monitoring needs</li> <li>Monitor query costs and resource usage to optimize expensive operations</li> <li>Regularly analyze cache vs storage performance to optimize data access patterns</li> <li>Keep track of compression ratios to ensure efficient storage utilization</li> </ol>"},{"location":"#quick-links","title":"Quick Links","text":"<ul> <li>System Monitoring</li> <li>Query Optimization</li> <li>Security Guide</li> <li>Maintenance Guide</li> </ul>"},{"location":"#references","title":"References","text":"<ul> <li>@ClickHouseSQL Reference</li> <li>@Web System Tables</li> <li>@ClickHouseSQL Performance</li> </ul>"},{"location":"#query-optimization-analysis","title":"Query Optimization Analysis","text":"<pre><code>-- Analyze query plan and execution\nEXPLAIN PLAN\nSELECT * FROM your_table WHERE column = 'value';\n\n-- Analyze query pipeline\nEXPLAIN PIPELINE\nSELECT * FROM your_table WHERE column = 'value';\n\n-- Analyze query AST (Abstract Syntax Tree)\nEXPLAIN AST\nSELECT * FROM your_table WHERE column = 'value';\n\n-- Analyze query syntax\nEXPLAIN SYNTAX\nSELECT * FROM your_table WHERE column = 'value';\n</code></pre>"},{"location":"#index-usage-analysis","title":"Index Usage Analysis","text":"<pre><code>-- Analyze index usage for a table\nSELECT\n    database,\n    table,\n    name AS index_name,\n    type AS index_type,\n    -- Index details\n    expr AS index_expression,\n    granularity,\n    -- Storage metrics\n    formatReadableSize(bytes_allocated) AS allocated_size,\n    formatReadableSize(data_compressed_bytes) AS compressed_size,\n    formatReadableSize(data_uncompressed_bytes) AS uncompressed_size,\n    -- Efficiency metrics\n    round(data_uncompressed_bytes / nullIf(data_compressed_bytes, 0), 2) AS compression_ratio\nFROM system.data_skipping_indices\nWHERE database = 'your_database'      -- Replace with your database\n  AND table = 'your_table'           -- Replace with your table\nORDER BY bytes_allocated DESC;\n\n-- Monitor index maintenance operations\nSELECT\n    event_time,\n    database,\n    table,\n    index_name,\n    -- Operation details\n    operation_type,\n    duration_ms,\n    -- Resource usage\n    read_rows,\n    read_bytes,\n    written_rows,\n    written_bytes\nFROM system.part_log\nWHERE event_type = 'DataSkippingIndexCreation'\n  AND event_date &gt;= today() - 7      -- Last week's operations\nORDER BY event_time DESC;\n</code></pre>"},{"location":"#query-resource-consumption","title":"Query Resource Consumption","text":"<pre><code>-- Analyze CPU usage by query\nSELECT\n    query_id,\n    user,\n    query,\n    -- CPU metrics\n    ProfileEvents['OSCPUVirtualTimeMicroseconds'] AS cpu_time_us,\n    ProfileEvents['OSIOWaitMicroseconds'] AS io_wait_us,\n    -- Thread metrics\n    ProfileEvents['ThreadsNew'] AS threads_created,\n    -- Context switches\n    ProfileEvents['ContextSwitchVoluntary'] AS voluntary_switches,\n    ProfileEvents['ContextSwitchInvoluntary'] AS involuntary_switches\nFROM system.query_log\nWHERE type = 'QueryFinish'\n  AND event_date &gt;= today() - 1\nORDER BY cpu_time_us DESC\nLIMIT 20;\n\n-- Memory allocation analysis\nSELECT\n    query_id,\n    user,\n    query,\n    -- Memory metrics\n    formatReadableSize(memory_usage) AS current_memory,\n    formatReadableSize(peak_memory_usage) AS peak_memory,\n    -- Memory allocation events\n    ProfileEvents['MemoryTracking'] AS memory_tracking,\n    ProfileEvents['MemoryTrackingInFunctions'] AS memory_in_functions\nFROM system.query_log\nWHERE type = 'QueryFinish'\n  AND event_date &gt;= today() - 1\nORDER BY peak_memory_usage DESC\nLIMIT 20;\n</code></pre>"},{"location":"#table-access-patterns","title":"Table Access Patterns","text":"<pre><code>-- Analyze table read patterns\nSELECT\n    database,\n    table,\n    -- Access metrics\n    count() AS access_count,\n    sum(read_rows) AS total_rows_read,\n    sum(read_bytes) AS total_bytes_read,\n    -- Efficiency metrics\n    avg(read_rows) AS avg_rows_per_query,\n    formatReadableSize(avg(read_bytes)) AS avg_bytes_per_query,\n    -- Time metrics\n    avg(query_duration_ms) AS avg_duration_ms\nFROM system.query_log\nWHERE type = 'QueryFinish'\n  AND event_date &gt;= today() - 7\nGROUP BY database, table\nHAVING access_count &gt; 10             -- Tables accessed more than 10 times\nORDER BY total_bytes_read DESC;\n\n-- Table modification patterns\nSELECT\n    database,\n    table,\n    -- Write metrics\n    count() AS write_count,\n    sum(written_rows) AS total_rows_written,\n    formatReadableSize(sum(written_bytes)) AS total_bytes_written,\n    -- Time analysis\n    avg(query_duration_ms) AS avg_write_duration_ms,\n    max(query_duration_ms) AS max_write_duration_ms\nFROM system.query_log\nWHERE type = 'QueryFinish'\n  AND query LIKE '%INSERT%'\n  AND event_date &gt;= today() - 7\nGROUP BY database, table\nORDER BY total_rows_written DESC;\n</code></pre>"},{"location":"#system-health-monitoring","title":"System Health Monitoring","text":"<pre><code>-- Monitor system metrics trends\nSELECT\n    metric,\n    value,\n    description,\n    -- Metric details\n    type,\n    level,\n    -- Add time context\n    now() AS current_time\nFROM system.metrics\nWHERE metric LIKE '%Memory%'         -- Filter for memory metrics\n   OR metric LIKE '%CPU%'           -- Filter for CPU metrics\n   OR metric LIKE '%Query%'         -- Filter for query metrics\nORDER BY metric;\n\n-- Monitor background processes\nSELECT\n    type,\n    name,\n    -- Process details\n    elapsed,\n    is_cancelled,\n    -- Progress tracking\n    total_parts_to_do,\n    parts_to_do,\n    -- Resource usage\n    memory_usage,\n    cpu_time_microseconds\nFROM system.merges\nWHERE is_mutation\nORDER BY elapsed DESC;\n</code></pre> <p>@Web Reference</p>"},{"location":"advanced-operations/maintenance/","title":"ClickHouse Maintenance Guide","text":"<p>A comprehensive guide for maintaining ClickHouse deployments.</p>"},{"location":"advanced-operations/maintenance/#regular-maintenance-tasks","title":"Regular Maintenance Tasks","text":""},{"location":"advanced-operations/maintenance/#data-retention","title":"Data Retention","text":"<pre><code>-- Check tables with TTL\nSELECT\n    database,\n    table,\n    name as ttl_name,\n    expression as ttl_expression\nFROM system.ttl_expressions\nORDER BY database, table;\n\n-- Apply TTL manually\nALTER TABLE database.table MODIFY TTL event_date + INTERVAL 90 DAY;\n</code></pre>"},{"location":"advanced-operations/maintenance/#table-optimization","title":"Table Optimization","text":"<pre><code>-- Optimize table storage\nOPTIMIZE TABLE database.table FINAL;\n\n-- Check if table needs optimization\nSELECT\n    database,\n    table,\n    formatReadableSize(data_uncompressed_bytes) as uncompressed_size,\n    formatReadableSize(data_compressed_bytes) as compressed_size,\n    rows_count\nFROM system.parts_columns\nWHERE (database, table) IN (\n    SELECT database, table\n    FROM system.tables\n    WHERE engine = 'MergeTree'\n)\nGROUP BY database, table\nHAVING count() &gt; 10  -- Tables with many parts\nORDER BY uncompressed_size DESC;\n</code></pre>"},{"location":"advanced-operations/maintenance/#backup-operations","title":"Backup Operations","text":"<pre><code>-- Create backup\nBACKUP TABLE database.table TO '/path/to/backup';\n\n-- Restore from backup\nRESTORE TABLE database.table FROM '/path/to/backup';\n\n-- Check backup status\nSELECT *\nFROM system.backup_log\nORDER BY start_time DESC\nLIMIT 10;\n</code></pre>"},{"location":"advanced-operations/maintenance/#maintenance-schedule","title":"Maintenance Schedule","text":""},{"location":"advanced-operations/maintenance/#daily-tasks","title":"Daily Tasks","text":"<ol> <li>Check system health (see Monitoring Guide)</li> <li>Review error logs</li> <li>Verify backup completion</li> <li>Check replication status</li> </ol>"},{"location":"advanced-operations/maintenance/#weekly-tasks","title":"Weekly Tasks","text":"<ol> <li>Optimize frequently modified tables</li> <li>Review and adjust TTL settings</li> <li>Clean up old backups</li> <li>Update system settings if needed</li> </ol>"},{"location":"advanced-operations/maintenance/#monthly-tasks","title":"Monthly Tasks","text":"<ol> <li>Full system audit</li> <li>Capacity planning</li> <li>Performance optimization</li> <li>Security review</li> </ol>"},{"location":"advanced-operations/maintenance/#data-management","title":"Data Management","text":""},{"location":"advanced-operations/maintenance/#table-maintenance","title":"Table Maintenance","text":"<pre><code>-- Analyze table structure\nSHOW CREATE TABLE database.table;\n\n-- Check table dependencies\nSELECT\n    database,\n    table,\n    name as dependency_name,\n    type as dependency_type\nFROM system.table_dependencies\nWHERE database = 'your_database'\n  AND table = 'your_table';\n\n-- Verify table consistency\nCHECK TABLE database.table;\n</code></pre>"},{"location":"advanced-operations/maintenance/#storage-management","title":"Storage Management","text":"<pre><code>-- Move table to different disk\nALTER TABLE database.table MOVE PARTITION tuple() TO DISK 'new_disk';\n\n-- Attach/detach partition\nALTER TABLE database.table DETACH PARTITION partition_id;\nALTER TABLE database.table ATTACH PARTITION partition_id;\n</code></pre>"},{"location":"advanced-operations/maintenance/#system-administration","title":"System Administration","text":""},{"location":"advanced-operations/maintenance/#configuration-management","title":"Configuration Management","text":"<pre><code>-- Export configuration\nSELECT *\nFROM system.settings\nWHERE changed = 1\nFORMAT TSV;\n\n-- Import configuration\nSET setting_name = 'value';\n</code></pre>"},{"location":"advanced-operations/maintenance/#user-management","title":"User Management","text":"<pre><code>-- Create new user\nCREATE USER username\nIDENTIFIED WITH sha256_password BY 'password'\nSETTINGS max_memory_usage = 20000000000;\n\n-- Grant permissions\nGRANT SELECT, INSERT ON database.* TO username;\n\n-- Review user permissions\nSHOW GRANTS FOR username;\n</code></pre>"},{"location":"advanced-operations/maintenance/#troubleshooting-guide","title":"Troubleshooting Guide","text":""},{"location":"advanced-operations/maintenance/#common-issues","title":"Common Issues","text":"<ol> <li> <p>Disk Space Issues</p> </li> <li> <p>Check disk usage (see Monitoring Guide)</p> </li> <li>Remove old data</li> <li>Optimize tables</li> <li> <p>Add new storage</p> </li> <li> <p>Performance Issues</p> </li> <li> <p>Review query performance (see Optimization Guide)</p> </li> <li>Check system resources</li> <li>Optimize table structure</li> <li> <p>Adjust system settings</p> </li> <li> <p>Replication Issues</p> </li> <li> <p>Verify network connectivity</p> </li> <li>Check replication queue</li> <li>Restart problematic replicas</li> <li>Re-initialize if necessary</li> </ol>"},{"location":"advanced-operations/maintenance/#recovery-procedures","title":"Recovery Procedures","text":""},{"location":"advanced-operations/maintenance/#data-recovery","title":"Data Recovery","text":"<pre><code>-- Recover from detached partition\nALTER TABLE database.table ATTACH PARTITION partition_id;\n\n-- Recover from backup\nRESTORE TABLE database.table FROM '/path/to/backup';\n\n-- Verify recovery\nSELECT count() FROM database.table;\n</code></pre>"},{"location":"advanced-operations/maintenance/#system-recovery","title":"System Recovery","text":"<ol> <li>Stop ClickHouse service</li> <li>Backup configuration files</li> <li>Check system logs</li> <li>Restore from last known good configuration</li> <li>Start ClickHouse service</li> <li>Verify system health</li> </ol>"},{"location":"advanced-operations/maintenance/#best-practices","title":"Best Practices","text":"<ol> <li>Regular backups</li> <li>Automated maintenance tasks</li> <li>Proper monitoring setup</li> <li>Documentation of changes</li> <li>Testing in staging environment</li> <li>Regular security updates</li> <li>Capacity planning</li> </ol>"},{"location":"advanced-operations/maintenance/#references","title":"References","text":"<ul> <li>@ClickHouseSQL Backup and Restore</li> <li>@Web Administration Guide</li> <li>@ClickHouseSQL System Tables</li> </ul>"},{"location":"advanced-operations/optimization/","title":"Query Optimization Guide","text":"<p>A comprehensive guide to optimizing ClickHouse queries for better performance.</p>"},{"location":"advanced-operations/optimization/#overview","title":"Overview","text":"<p>This guide covers various techniques for optimizing query performance in ClickHouse, including:</p> <ul> <li>Query structure optimization</li> <li>Index usage</li> <li>Memory management</li> <li>Data skipping optimization</li> </ul> <p>@ClickHouseSQL Reference</p>"},{"location":"advanced-operations/optimization/#query-structure-optimization","title":"Query Structure Optimization","text":""},{"location":"advanced-operations/optimization/#using-prewhere","title":"Using PREWHERE","text":"<pre><code>-- Example: Using PREWHERE for better filtering performance\nSELECT\n    user_id,\n    timestamp,\n    event_type\nFROM events\nPREWHERE event_date = today()  -- Executed before WHERE, reduces data read\nWHERE event_type = 'click'\nLIMIT 100;\n</code></pre> <p>When to use: Use PREWHERE when filtering on columns that can significantly reduce the data before processing.</p>"},{"location":"advanced-operations/optimization/#optimizing-joins","title":"Optimizing JOINs","text":"<pre><code>-- Example: Join optimization with proper table order\nSELECT\n    u.name,\n    count(e.event_id) as event_count\nFROM events e\nINNER JOIN users u ON u.id = e.user_id  -- Smaller table on right\nWHERE e.event_date &gt;= today() - 7\nGROUP BY u.name;\n</code></pre> <p>Best Practice: Place larger tables first in JOIN operations.</p>"},{"location":"advanced-operations/optimization/#index-usage","title":"Index Usage","text":""},{"location":"advanced-operations/optimization/#primary-key-optimization","title":"Primary Key Optimization","text":"<pre><code>-- Example: Query using primary key for efficient data access\nSELECT *\nFROM events\nWHERE (event_date, user_id) = ('2024-02-01', 123)  -- Uses primary key\nLIMIT 10;\n\n-- Check primary key usage\nEXPLAIN indexes = 1\nSELECT * FROM events\nWHERE event_date = '2024-02-01';\n</code></pre>"},{"location":"advanced-operations/optimization/#skip-index-creation-and-usage","title":"Skip Index Creation and Usage","text":"<pre><code>-- Create skip index\nALTER TABLE events\nADD INDEX event_type_idx event_type TYPE minmax GRANULARITY 4;\n\n-- Query using skip index\nSELECT count()\nFROM events\nWHERE event_type = 'purchase'  -- Will use skip index\n  AND event_date &gt;= today() - 7;\n</code></pre>"},{"location":"advanced-operations/optimization/#memory-management","title":"Memory Management","text":""},{"location":"advanced-operations/optimization/#memory-settings","title":"Memory Settings","text":"<pre><code>-- Set memory limits for query\nSET max_memory_usage = 20000000000;  -- 20GB limit\nSET max_bytes_before_external_sort = 10000000000;  -- 10GB for sorting\n</code></pre>"},{"location":"advanced-operations/optimization/#using-sampling-for-large-tables","title":"Using Sampling for Large Tables","text":"<pre><code>-- Example: Approximate analysis using sampling\nSELECT\n    event_type,\n    count() * 100 as estimated_total\nFROM events\nSAMPLE 0.01  -- 1% sample\nGROUP BY event_type;\n</code></pre>"},{"location":"advanced-operations/optimization/#data-skipping-optimization","title":"Data Skipping Optimization","text":""},{"location":"advanced-operations/optimization/#partition-pruning","title":"Partition Pruning","text":"<pre><code>-- Example: Query leveraging partitioning\nSELECT count()\nFROM events\nWHERE event_date BETWEEN '2024-01-01' AND '2024-01-31'  -- Uses partition pruning\n  AND user_id = 123;\n\n-- Check partition usage\nSELECT\n    partition_id,\n    rows,\n    formatReadableSize(bytes_on_disk) as size\nFROM system.parts\nWHERE table = 'events'\n  AND active = 1;\n</code></pre>"},{"location":"advanced-operations/optimization/#query-analysis-tools","title":"Query Analysis Tools","text":"<pre><code>-- Analyze query execution plan\nEXPLAIN pipeline\nSELECT * FROM events WHERE event_date = today();\n\n-- Profile query execution\nSET allow_introspection_functions=1;\nSELECT * FROM events WHERE event_date = today() SETTINGS profile=1;\n</code></pre> <p>For performance monitoring queries, see System Monitoring Guide.</p>"},{"location":"advanced-operations/optimization/#best-practices","title":"Best Practices","text":"<ol> <li>Always use appropriate indexes</li> <li>Leverage partitioning for large tables</li> <li>Use PREWHERE for early data filtering</li> <li>Monitor and limit memory usage</li> <li>Use sampling for approximate analysis of large datasets</li> <li>Regularly analyze query performance</li> <li>Optimize JOIN operations</li> </ol>"},{"location":"advanced-operations/optimization/#references","title":"References","text":"<ul> <li>@ClickHouseSQL Query Optimization</li> <li>@Web Performance Tuning</li> <li>@ClickHouseSQL System Tables</li> </ul>"},{"location":"advanced-operations/placeholder/","title":"Coming Soon","text":"<p>This section is under development.</p>"},{"location":"advanced-operations/security/","title":"Security and Access Control Guide","text":"<p>A comprehensive guide to managing security and access control in ClickHouse.</p>"},{"location":"advanced-operations/security/#overview","title":"Overview","text":"<p>This guide covers essential security features in ClickHouse:</p> <ul> <li>User management</li> <li>Role-based access control (RBAC)</li> <li>Row-level security</li> <li>SSL/TLS configuration</li> <li>Audit logging</li> </ul> <p>@ClickHouseSQL Reference</p>"},{"location":"advanced-operations/security/#user-management","title":"User Management","text":""},{"location":"advanced-operations/security/#creating-and-managing-users","title":"Creating and Managing Users","text":"<pre><code>-- Create a new user with password\nCREATE USER john\nIDENTIFIED WITH sha256_password BY 'secure_password'\nSETTINGS max_memory_usage = 10000000000;  -- 10GB limit\n\n-- Modify user settings\nALTER USER john\nSETTINGS max_memory_usage = 20000000000;  -- 20GB limit\n\n-- List all users\nSELECT *\nFROM system.users\nWHERE name NOT LIKE '%default%';\n</code></pre>"},{"location":"advanced-operations/security/#user-quotas","title":"User Quotas","text":"<pre><code>-- Create a quota\nCREATE QUOTA user_quota\n    KEYED BY ip_address\n    FOR INTERVAL 1 hour MAX queries = 1000\n    FOR INTERVAL 1 day MAX result_rows = 1000000;\n\n-- Apply quota to user\nALTER USER john\n    QUOTA user_quota;\n</code></pre>"},{"location":"advanced-operations/security/#role-based-access-control","title":"Role-Based Access Control","text":""},{"location":"advanced-operations/security/#creating-and-managing-roles","title":"Creating and Managing Roles","text":"<pre><code>-- Create a role\nCREATE ROLE analyst;\n\n-- Grant privileges to role\nGRANT SELECT ON database.* TO analyst;\nGRANT SELECT ON system.query_log TO analyst;\n\n-- Assign role to user\nGRANT analyst TO john;\n\n-- List role grants\nSELECT *\nFROM system.grants\nWHERE user_name = 'john';\n</code></pre>"},{"location":"advanced-operations/security/#complex-role-management","title":"Complex Role Management","text":"<pre><code>-- Create role hierarchy\nCREATE ROLE junior_analyst;\nCREATE ROLE senior_analyst;\n\nGRANT SELECT ON database.small_tables TO junior_analyst;\nGRANT SELECT ON database.* TO senior_analyst;\nGRANT junior_analyst TO senior_analyst;\n\n-- Set default role\nALTER USER john DEFAULT ROLE senior_analyst;\n</code></pre>"},{"location":"advanced-operations/security/#row-level-security","title":"Row-Level Security","text":""},{"location":"advanced-operations/security/#setting-up-row-level-security","title":"Setting Up Row-Level Security","text":"<pre><code>-- Create row policy\nCREATE ROW POLICY department_access\nON database.employees\nFOR SELECT\nUSING department_id = currentUser();\n\n-- Apply policy to role\nALTER ROW POLICY department_access\nON database.employees\nTO analyst;\n</code></pre>"},{"location":"advanced-operations/security/#checking-row-policies","title":"Checking Row Policies","text":"<pre><code>-- List active policies\nSELECT *\nFROM system.row_policies\nWHERE database = 'database'\n  AND table = 'employees';\n</code></pre>"},{"location":"advanced-operations/security/#ssltls-configuration","title":"SSL/TLS Configuration","text":""},{"location":"advanced-operations/security/#checking-ssl-status","title":"Checking SSL Status","text":"<pre><code>-- Check if connection is secure\nSELECT value\nFROM system.settings\nWHERE name = 'secure';\n\n-- View SSL configuration\nSELECT *\nFROM system.ssl_certificates;\n</code></pre>"},{"location":"advanced-operations/security/#audit-logging","title":"Audit Logging","text":""},{"location":"advanced-operations/security/#query-logging","title":"Query Logging","text":"<pre><code>-- Enable query logging\nSET log_queries = 1;\n\n-- View query history\nSELECT\n    user,\n    query_id,\n    query,\n    exception,\n    event_time\nFROM system.query_log\nWHERE type = 'QueryFinish'\n  AND event_date &gt;= today() - 1\nORDER BY event_time DESC;\n</code></pre>"},{"location":"advanced-operations/security/#access-logging","title":"Access Logging","text":"<pre><code>-- View access attempts\nSELECT\n    user_name,\n    access_type,\n    grant_option,\n    database,\n    table,\n    column,\n    creation_time\nFROM system.grants\nORDER BY creation_time DESC;\n</code></pre>"},{"location":"advanced-operations/security/#security-monitoring","title":"Security Monitoring","text":""},{"location":"advanced-operations/security/#active-sessions","title":"Active Sessions","text":"<pre><code>-- Monitor current sessions\nSELECT\n    user,\n    client_hostname,\n    client_name,\n    elapsed,\n    query\nFROM system.processes\nORDER BY elapsed DESC;\n</code></pre>"},{"location":"advanced-operations/security/#failed-login-attempts","title":"Failed Login Attempts","text":"<pre><code>-- Check authentication failures\nSELECT\n    user,\n    authentication_method,\n    exception,\n    event_time\nFROM system.query_log\nWHERE type = 'ExceptionBeforeStart'\n  AND event_date &gt;= today() - 1\n  AND exception LIKE '%Authentication%'\nORDER BY event_time DESC;\n</code></pre>"},{"location":"advanced-operations/security/#best-practices","title":"Best Practices","text":"<ol> <li>Use strong passwords and SHA-256 password hashing</li> <li>Implement principle of least privilege</li> <li>Regularly audit user permissions</li> <li>Enable and monitor query logging</li> <li>Use row-level security for sensitive data</li> <li>Implement proper network security</li> <li>Regular security audits</li> </ol>"},{"location":"advanced-operations/security/#troubleshooting","title":"Troubleshooting","text":""},{"location":"advanced-operations/security/#common-issues","title":"Common Issues","text":"<ol> <li>Permission Denied</li> </ol> <pre><code>-- Check user privileges\nSELECT *\nFROM system.grants\nWHERE user_name = 'problem_user';\n\n-- Check role assignments\nSELECT *\nFROM system.role_grants\nWHERE user_name = 'problem_user';\n</code></pre> <ol> <li>Authentication Failures</li> </ol> <pre><code>-- Check recent authentication issues\nSELECT\n    user,\n    client_hostname,\n    exception\nFROM system.query_log\nWHERE event_date &gt;= today()\n  AND type = 'ExceptionBeforeStart'\n  AND exception LIKE '%Authentication%'\nORDER BY event_time DESC;\n</code></pre>"},{"location":"advanced-operations/security/#references","title":"References","text":"<ul> <li>@ClickHouseSQL Security</li> <li>@Web Access Control</li> <li>@ClickHouseSQL System Tables</li> </ul>"},{"location":"basic-operations/connection/","title":"Connection Commands","text":"<p>This section covers essential commands for connecting to and managing ClickHouse Cloud connections.</p>"},{"location":"basic-operations/connection/#connection-information","title":"Connection Information","text":""},{"location":"basic-operations/connection/#check-current-connection","title":"Check Current Connection","text":"<pre><code>SELECT currentUser() AS current_user,\n       currentDatabase() AS current_database,\n       currentQueryId() AS query_id;\n</code></pre>"},{"location":"basic-operations/connection/#view-connection-settings","title":"View Connection Settings","text":"<pre><code>SELECT name, value\nFROM system.settings\nWHERE name LIKE '%connection%'\nORDER BY name;\n</code></pre>"},{"location":"basic-operations/connection/#session-management","title":"Session Management","text":""},{"location":"basic-operations/connection/#view-active-sessions","title":"View Active Sessions","text":"<pre><code>SELECT user,\n       client_hostname,\n       client_name,\n       client_version,\n       query_start_time,\n       query\nFROM system.processes\nORDER BY query_start_time DESC;\n</code></pre>"},{"location":"basic-operations/connection/#kill-a-specific-query","title":"Kill a Specific Query","text":"<pre><code>KILL QUERY WHERE query_id = 'query-id-here';\n</code></pre>"},{"location":"basic-operations/connection/#connection-pool-information","title":"Connection Pool Information","text":""},{"location":"basic-operations/connection/#check-connection-pool-status","title":"Check Connection Pool Status","text":"<pre><code>SELECT *\nFROM system.metrics\nWHERE metric LIKE '%Connection%';\n</code></pre>"},{"location":"basic-operations/connection/#security-and-authentication","title":"Security and Authentication","text":""},{"location":"basic-operations/connection/#view-user-privileges","title":"View User Privileges","text":"<pre><code>SHOW GRANTS FOR CURRENT USER;\n</code></pre>"},{"location":"basic-operations/connection/#check-access-rights","title":"Check Access Rights","text":"<pre><code>SELECT * FROM system.grants;\n</code></pre>"},{"location":"basic-operations/connection/#troubleshooting-tips","title":"Troubleshooting Tips","text":""},{"location":"basic-operations/connection/#common-connection-issues","title":"Common Connection Issues","text":"<ol> <li>Connection Timeout</li> </ol> <pre><code>-- Check network timeouts\nSELECT name, value\nFROM system.settings\nWHERE name LIKE '%timeout%';\n</code></pre> <ol> <li>Connection Limits</li> </ol> <pre><code>-- Check max connections\nSELECT *\nFROM system.metrics\nWHERE metric = 'TCPConnection';\n</code></pre>"},{"location":"basic-operations/connection/#best-practices","title":"Best Practices","text":"<ol> <li>Always use secure connections (SSL/TLS) in production</li> <li>Set appropriate timeouts for your use case</li> <li>Monitor connection pools for potential issues</li> <li>Use connection pooling when appropriate</li> </ol>"},{"location":"basic-operations/connection/#connection-string-examples","title":"Connection String Examples","text":"<pre><code># Basic connection string\nclickhouse-client --host=&lt;host&gt; --port=9440 --secure --user=&lt;user&gt; --password=&lt;password&gt;\n\n# Connection with specific database\nclickhouse-client --host=&lt;host&gt; --port=9440 --secure --database=&lt;database&gt; --user=&lt;user&gt; --password=&lt;password&gt;\n</code></pre>"},{"location":"basic-operations/connection/#health-checks","title":"Health Checks","text":""},{"location":"basic-operations/connection/#basic-health-check-query","title":"Basic Health Check Query","text":"<pre><code>SELECT 1;\n</code></pre>"},{"location":"basic-operations/connection/#comprehensive-health-check","title":"Comprehensive Health Check","text":"<pre><code>SELECT\n    currentUser() AS user,\n    currentDatabase() AS database,\n    version() AS version,\n    uptime() AS uptime_seconds,\n    timezone() AS timezone;\n</code></pre>"},{"location":"basic-operations/databases/","title":"Database Operations","text":"<p>Essential commands for managing databases in ClickHouse Cloud.</p>"},{"location":"basic-operations/databases/#database-management","title":"Database Management","text":""},{"location":"basic-operations/databases/#list-databases","title":"List Databases","text":"<pre><code>-- Show all databases\nSHOW DATABASES;\n\n-- Get detailed database information\nSELECT name,\n       engine,\n       data_path,\n       metadata_path,\n       uuid\nFROM system.databases;\n</code></pre>"},{"location":"basic-operations/databases/#create-database","title":"Create Database","text":"<pre><code>-- Basic database creation\nCREATE DATABASE IF NOT EXISTS database_name;\n\n-- Create database with specific engine\nCREATE DATABASE IF NOT EXISTS database_name\nENGINE = Atomic;\n</code></pre>"},{"location":"basic-operations/databases/#drop-database","title":"Drop Database","text":"<pre><code>DROP DATABASE IF EXISTS database_name;\n</code></pre>"},{"location":"basic-operations/databases/#switch-database","title":"Switch Database","text":"<pre><code>USE database_name;\n</code></pre>"},{"location":"basic-operations/databases/#database-information","title":"Database Information","text":""},{"location":"basic-operations/databases/#database-size","title":"Database Size","text":"<pre><code>-- Get size of all databases\nSELECT\n    database,\n    formatReadableSize(sum(bytes_on_disk)) AS disk_size,\n    count() AS total_tables,\n    sum(rows) AS total_rows\nFROM system.parts\nGROUP BY database\nORDER BY sum(bytes_on_disk) DESC;\n</code></pre>"},{"location":"basic-operations/databases/#database-metadata","title":"Database Metadata","text":"<pre><code>-- View database engines\nSELECT\n    name AS database_name,\n    engine,\n    engine_full,\n    uuid\nFROM system.databases\nORDER BY name;\n</code></pre>"},{"location":"basic-operations/databases/#database-permissions","title":"Database Permissions","text":"<pre><code>-- Show database privileges\nSHOW GRANTS ON database_name;\n\n-- Check current user's access to databases\nSELECT\n    database,\n    count() AS tables_count,\n    any(engine) AS db_engine\nFROM system.tables\nWHERE has_access_to_database(database)\nGROUP BY database;\n</code></pre>"},{"location":"basic-operations/databases/#monitoring-and-maintenance","title":"Monitoring and Maintenance","text":""},{"location":"basic-operations/databases/#database-activity","title":"Database Activity","text":"<pre><code>-- Monitor database operations\nSELECT\n    database,\n    event_type,\n    event_date,\n    event_time,\n    query\nFROM system.query_log\nWHERE type &gt;= 2\n  AND event_date &gt;= today() - 1\nORDER BY event_time DESC\nLIMIT 10;\n</code></pre>"},{"location":"basic-operations/databases/#database-performance","title":"Database Performance","text":"<pre><code>-- Check database metrics\nSELECT\n    database,\n    table,\n    formatReadableSize(sum(bytes)) AS memory_usage,\n    sum(rows) AS total_rows,\n    count() AS part_count\nFROM system.parts\nGROUP BY database, table\nORDER BY sum(bytes) DESC;\n</code></pre>"},{"location":"basic-operations/databases/#best-practices","title":"Best Practices","text":"<ol> <li>Use meaningful database names</li> <li>Implement proper access controls</li> <li>Regular monitoring of database sizes</li> <li>Periodic cleanup of unused databases</li> </ol>"},{"location":"basic-operations/databases/#common-tasks","title":"Common Tasks","text":""},{"location":"basic-operations/databases/#database-backup","title":"Database Backup","text":"<pre><code>-- Create backup of database structure\nSELECT\n    concat('CREATE DATABASE IF NOT EXISTS ', name, ' ENGINE = ', engine_full, ';') AS create_statement\nFROM system.databases\nWHERE name = 'database_name';\n</code></pre>"},{"location":"basic-operations/databases/#database-replication-status","title":"Database Replication Status","text":"<pre><code>-- Check replication status for database tables\nSELECT\n    database,\n    table,\n    is_leader,\n    total_replicas,\n    active_replicas\nFROM system.replicas\nWHERE database = 'database_name'\nORDER BY table;\n</code></pre>"},{"location":"basic-operations/databases/#database-settings","title":"Database Settings","text":"<pre><code>-- View database-specific settings\nSELECT\n    name,\n    value,\n    changed,\n    description\nFROM system.settings\nWHERE name LIKE '%database%'\nORDER BY name;\n</code></pre>"},{"location":"basic-operations/tables/","title":"Table Operations","text":"<p>Essential commands for managing tables in ClickHouse Cloud.</p>"},{"location":"basic-operations/tables/#table-management","title":"Table Management","text":""},{"location":"basic-operations/tables/#list-tables","title":"List Tables","text":"<pre><code>-- Show all tables in current database\nSHOW TABLES;\n\n-- Show tables with detailed information\nSELECT\n    database,\n    name AS table_name,\n    engine,\n    total_rows,\n    formatReadableSize(total_bytes) AS total_size,\n    formatReadableSize(memory_usage) AS memory_usage\nFROM system.tables\nWHERE database = currentDatabase()\nORDER BY total_bytes DESC;\n</code></pre>"},{"location":"basic-operations/tables/#create-table","title":"Create Table","text":"<pre><code>-- Basic table creation\nCREATE TABLE IF NOT EXISTS table_name\n(\n    id UInt32,\n    timestamp DateTime,\n    event_type String,\n    user_id String,\n    metadata JSON\n)\nENGINE = MergeTree()\nORDER BY (timestamp, id);\n\n-- Create table with sampling\nCREATE TABLE IF NOT EXISTS table_name\n(\n    timestamp DateTime,\n    user_id String,\n    event_type LowCardinality(String),\n    value Float64,\n    _sample_factor UInt8\n)\nENGINE = MergeTree()\nORDER BY (timestamp, user_id)\nSAMPLE BY _sample_factor;\n</code></pre>"},{"location":"basic-operations/tables/#drop-table","title":"Drop Table","text":"<pre><code>-- Drop table\nDROP TABLE IF EXISTS table_name;\n\n-- Drop table with sync (wait for completion)\nDROP TABLE IF EXISTS table_name SYNC;\n</code></pre>"},{"location":"basic-operations/tables/#alter-table","title":"Alter Table","text":"<pre><code>-- Add column\nALTER TABLE table_name\n    ADD COLUMN IF NOT EXISTS new_column_name String;\n\n-- Modify column type\nALTER TABLE table_name\n    MODIFY COLUMN column_name UInt64;\n\n-- Drop column\nALTER TABLE table_name\n    DROP COLUMN IF EXISTS column_name;\n\n-- Rename table\nRENAME TABLE old_table TO new_table;\n</code></pre>"},{"location":"basic-operations/tables/#table-information","title":"Table Information","text":""},{"location":"basic-operations/tables/#table-structure","title":"Table Structure","text":"<pre><code>-- Show table structure\nDESCRIBE table_name;\n\n-- Show create table statement\nSHOW CREATE TABLE table_name;\n\n-- Get detailed column information\nSELECT\n    name,\n    type,\n    position,\n    default_kind,\n    default_expression\nFROM system.columns\nWHERE table = 'table_name'\nORDER BY position;\n</code></pre>"},{"location":"basic-operations/tables/#table-statistics","title":"Table Statistics","text":"<pre><code>-- Get table size and row count\nSELECT\n    table,\n    formatReadableSize(sum(bytes)) AS size,\n    sum(rows) AS row_count,\n    max(modification_time) AS last_modified\nFROM system.parts\nWHERE active AND table = 'table_name'\nGROUP BY table;\n\n-- Get detailed table metrics\nSELECT\n    partition,\n    name AS part_name,\n    rows,\n    formatReadableSize(bytes) AS part_size,\n    modification_time\nFROM system.parts\nWHERE table = 'table_name'\nORDER BY modification_time DESC;\n</code></pre>"},{"location":"basic-operations/tables/#table-maintenance","title":"Table Maintenance","text":""},{"location":"basic-operations/tables/#optimize-table","title":"Optimize Table","text":"<pre><code>-- Basic optimization\nOPTIMIZE TABLE table_name FINAL;\n\n-- Optimize specific partition\nOPTIMIZE TABLE table_name PARTITION 'partition_id' FINAL;\n</code></pre>"},{"location":"basic-operations/tables/#table-parts-management","title":"Table Parts Management","text":"<pre><code>-- Check table parts\nSELECT\n    partition,\n    name AS part_name,\n    active,\n    rows,\n    formatReadableSize(bytes) AS part_size\nFROM system.parts\nWHERE table = 'table_name'\nORDER BY bytes DESC;\n\n-- Check parts merging\nSELECT *\nFROM system.merges\nWHERE table = 'table_name';\n</code></pre>"},{"location":"basic-operations/tables/#table-replication","title":"Table Replication","text":"<pre><code>-- Check replication status\nSELECT\n    database,\n    table,\n    is_leader,\n    is_readonly,\n    future_parts,\n    parts_to_check\nFROM system.replicas\nWHERE table = 'table_name';\n</code></pre>"},{"location":"basic-operations/tables/#best-practices","title":"Best Practices","text":""},{"location":"basic-operations/tables/#storage-optimization","title":"Storage Optimization","text":"<pre><code>-- Find tables with small parts\nSELECT\n    database,\n    table,\n    count() AS parts_count,\n    formatReadableSize(sum(bytes)) AS total_size\nFROM system.parts\nWHERE active\nGROUP BY database, table\nHAVING parts_count &gt; 10\nORDER BY parts_count DESC;\n</code></pre>"},{"location":"basic-operations/tables/#monitoring","title":"Monitoring","text":"<pre><code>-- Monitor table operations\nSELECT\n    event_time,\n    query,\n    read_rows,\n    written_rows,\n    result_rows\nFROM system.query_log\nWHERE query LIKE '%table_name%'\n  AND type &gt;= 2\n  AND event_date &gt;= today() - 1\nORDER BY event_time DESC;\n</code></pre>"},{"location":"basic-operations/tables/#performance-analysis","title":"Performance Analysis","text":"<pre><code>-- Check table performance\nSELECT\n    table,\n    formatReadableSize(sum(bytes)) AS size,\n    count() AS parts,\n    sum(rows) AS rows,\n    avg(marks) AS avg_marks\nFROM system.parts\nWHERE active\nGROUP BY table\nORDER BY sum(bytes) DESC;\n</code></pre>"},{"location":"data-operations/insert/","title":"Data Insertion","text":"<p>Commands and best practices for inserting data into ClickHouse tables.</p>"},{"location":"data-operations/insert/#basic-insert-operations","title":"Basic Insert Operations","text":""},{"location":"data-operations/insert/#single-row-insert","title":"Single Row Insert","text":"<pre><code>-- Basic INSERT\nINSERT INTO table_name (column1, column2, column3)\nVALUES ('value1', 'value2', 'value3');\n\n-- Insert with DEFAULT values\nINSERT INTO table_name\nVALUES ('value1', DEFAULT, 'value3');\n</code></pre>"},{"location":"data-operations/insert/#bulk-insert","title":"Bulk Insert","text":"<pre><code>-- Multiple rows INSERT\nINSERT INTO table_name (column1, column2, column3)\nVALUES\n    ('value1', 'value2', 'value3'),\n    ('value4', 'value5', 'value6'),\n    ('value7', 'value8', 'value9');\n</code></pre>"},{"location":"data-operations/insert/#insert-from-select","title":"Insert from SELECT","text":"<pre><code>-- Insert data from another table\nINSERT INTO target_table\nSELECT *\nFROM source_table\nWHERE condition;\n\n-- Insert with column transformation\nINSERT INTO target_table (column1, column2, transformed_column)\nSELECT\n    column1,\n    column2,\n    transform_function(column3)\nFROM source_table;\n</code></pre>"},{"location":"data-operations/insert/#advanced-insert-operations","title":"Advanced Insert Operations","text":""},{"location":"data-operations/insert/#insert-with-cast","title":"Insert with CAST","text":"<pre><code>-- Insert with type casting\nINSERT INTO table_name\nSELECT\n    CAST(column1 AS UInt32) AS id,\n    CAST(column2 AS DateTime) AS timestamp,\n    column3\nFROM source_table;\n</code></pre>"},{"location":"data-operations/insert/#asynchronous-insert","title":"Asynchronous Insert","text":"<pre><code>-- Enable asynchronous inserts\nSET async_insert = 1;\nSET wait_for_async_insert = 0;\n\n-- Insert with async settings\nINSERT INTO table_name\nSELECT * FROM source_table;\n</code></pre>"},{"location":"data-operations/insert/#insert-with-deduplication","title":"Insert with Deduplication","text":"<pre><code>-- Check current deduplication window\nSELECT value\nFROM system.settings\nWHERE name = 'merge_tree_min_rows_for_concurrent_read';\n\n-- Insert with deduplication\nINSERT INTO table_name\nSELECT *\nFROM source_table\nGROUP BY id\nHAVING max(timestamp);\n</code></pre>"},{"location":"data-operations/insert/#monitoring-insert-operations","title":"Monitoring Insert Operations","text":""},{"location":"data-operations/insert/#track-insert-performance","title":"Track Insert Performance","text":"<pre><code>-- Monitor recent inserts\nSELECT\n    query_id,\n    event_time,\n    query,\n    written_rows,\n    written_bytes,\n    peak_memory_usage\nFROM system.query_log\nWHERE type = 2  -- Type INSERT\n  AND event_date &gt;= today() - 1\nORDER BY event_time DESC;\n</code></pre>"},{"location":"data-operations/insert/#check-insert-errors","title":"Check Insert Errors","text":"<pre><code>-- View failed inserts\nSELECT\n    event_time,\n    query,\n    exception,\n    stack_trace\nFROM system.query_log\nWHERE type = 2  -- Type INSERT\n  AND exception != ''\n  AND event_date &gt;= today() - 1\nORDER BY event_time DESC;\n</code></pre>"},{"location":"data-operations/insert/#best-practices","title":"Best Practices","text":""},{"location":"data-operations/insert/#optimize-insert-performance","title":"Optimize Insert Performance","text":"<pre><code>-- Check current insert-related settings\nSELECT name, value, description\nFROM system.settings\nWHERE name LIKE '%insert%'\n   OR name LIKE '%buffer%';\n\n-- Monitor buffer table usage\nSELECT\n    database,\n    table,\n    blocks_inserted,\n    blocks_removed,\n    rows\nFROM system.buffer_usage;\n</code></pre>"},{"location":"data-operations/insert/#batch-insert-recommendations","title":"Batch Insert Recommendations","text":"<ol> <li>Use bulk inserts instead of single-row inserts</li> <li>Consider using Buffer tables for high-frequency inserts</li> <li>Monitor and adjust buffer settings based on workload</li> <li>Use async inserts for better throughput when appropriate</li> </ol>"},{"location":"data-operations/insert/#insert-with-buffer-table","title":"Insert with Buffer Table","text":"<pre><code>-- Create buffer table\nCREATE TABLE buffer_table AS source_table\nENGINE = Buffer(database, source_table, 16, 10, 100, 10000, 1000000, 10000000, 100000000);\n\n-- Insert into buffer table\nINSERT INTO buffer_table\nSELECT * FROM temporary_data;\n</code></pre>"},{"location":"data-operations/insert/#troubleshooting","title":"Troubleshooting","text":""},{"location":"data-operations/insert/#common-issues","title":"Common Issues","text":"<pre><code>-- Check for blocked inserts\nSELECT\n    query_id,\n    user,\n    query,\n    elapsed\nFROM system.processes\nWHERE query LIKE 'INSERT%'\nORDER BY elapsed DESC;\n\n-- Monitor insert queues\nSELECT *\nFROM system.metrics\nWHERE metric LIKE '%Insert%'\n   OR metric LIKE '%Background%';\n</code></pre>"},{"location":"data-operations/insert/#data-quality-checks","title":"Data Quality Checks","text":"<pre><code>-- Verify inserted data\nSELECT\n    count() AS row_count,\n    min(timestamp) AS earliest_record,\n    max(timestamp) AS latest_record,\n    uniqExact(id) AS unique_ids\nFROM table_name\nWHERE timestamp &gt;= today() - 1;\n\n-- Check for data anomalies\nSELECT\n    toHour(timestamp) AS hour,\n    count() AS records_per_hour\nFROM table_name\nWHERE timestamp &gt;= today() - 1\nGROUP BY hour\nORDER BY hour;\n</code></pre>"},{"location":"data-operations/select/","title":"Query Operations","text":"<p>Essential commands and optimization techniques for querying data in ClickHouse.</p>"},{"location":"data-operations/select/#basic-queries","title":"Basic Queries","text":""},{"location":"data-operations/select/#simple-select","title":"Simple SELECT","text":"<pre><code>-- Basic SELECT\nSELECT *\nFROM table_name\nLIMIT 10;\n\n-- Select specific columns\nSELECT\n    column1,\n    column2,\n    count() AS count\nFROM table_name\nWHERE column1 = 'value'\nGROUP BY column1, column2\nORDER BY count DESC\nLIMIT 100;\n</code></pre>"},{"location":"data-operations/select/#filtering-and-sorting","title":"Filtering and Sorting","text":"<pre><code>-- Complex filtering\nSELECT *\nFROM table_name\nWHERE column1 IN ('value1', 'value2')\n  AND column2 BETWEEN '2024-01-01' AND '2024-02-01'\n  AND column3 LIKE '%pattern%'\nORDER BY column1 DESC\nLIMIT 1000;\n\n-- Using PREWHERE for optimization\nSELECT *\nFROM table_name\nPREWHERE column1 = 'value'\nWHERE column2 &gt; 0\nLIMIT 100;\n</code></pre>"},{"location":"data-operations/select/#advanced-queries","title":"Advanced Queries","text":""},{"location":"data-operations/select/#aggregations","title":"Aggregations","text":"<pre><code>-- Basic aggregations\nSELECT\n    toStartOfHour(timestamp) AS hour,\n    count() AS events,\n    uniqExact(user_id) AS unique_users,\n    avg(value) AS avg_value,\n    quantile(0.95)(duration) AS p95_duration\nFROM table_name\nGROUP BY hour\nORDER BY hour DESC;\n\n-- Complex aggregations\nSELECT\n    user_id,\n    groupArray(event_type) AS events,\n    groupArrayMovingAvg(5)(value) AS moving_avg\nFROM table_name\nGROUP BY user_id\nHAVING length(events) &gt; 10;\n</code></pre>"},{"location":"data-operations/select/#joins","title":"Joins","text":"<pre><code>-- Inner JOIN\nSELECT\n    t1.id,\n    t1.timestamp,\n    t2.user_name\nFROM table1 AS t1\nINNER JOIN table2 AS t2\nON t1.user_id = t2.id;\n\n-- LEFT ARRAY JOIN\nSELECT\n    user_id,\n    arrayJoin(events) AS event\nFROM (\n    SELECT\n        user_id,\n        groupArray(event_type) AS events\n    FROM table_name\n    GROUP BY user_id\n);\n</code></pre>"},{"location":"data-operations/select/#query-optimization","title":"Query Optimization","text":""},{"location":"data-operations/select/#using-sample","title":"Using SAMPLE","text":"<pre><code>-- Query with sampling\nSELECT\n    count() * any(sampling_ratio) AS estimated_total,\n    avg(value) AS estimated_avg\nFROM table_name\nSAMPLE 0.1;\n\n-- Sample with offset\nSELECT count()\nFROM table_name\nSAMPLE 0.1 OFFSET 0.5;\n</code></pre>"},{"location":"data-operations/select/#materialized-views","title":"Materialized Views","text":"<pre><code>-- Query materialized view\nSELECT *\nFROM mv_table_name\nWHERE timestamp &gt;= now() - INTERVAL 1 HOUR;\n\n-- Check materialized view status\nSELECT\n    database,\n    table,\n    engine,\n    total_rows,\n    total_bytes\nFROM system.tables\nWHERE name LIKE 'mv_%';\n</code></pre>"},{"location":"data-operations/select/#performance-analysis","title":"Performance Analysis","text":""},{"location":"data-operations/select/#query-profiling","title":"Query Profiling","text":"<pre><code>-- Enable profiling\nSET query_profiler_real_time_period_ns=10000000;\nSET allow_introspection_functions=1;\n\n-- Profile query\nSELECT\n    ProfileEvents.Names AS metric,\n    ProfileEvents.Values AS value\nFROM system.query_log\nARRAY JOIN ProfileEvents\nWHERE query_id = 'your_query_id'\n  AND type = 'QueryFinish';\n</code></pre>"},{"location":"data-operations/select/#query-analysis","title":"Query Analysis","text":"<pre><code>-- Analyze query performance\nSELECT\n    query,\n    read_rows,\n    read_bytes,\n    written_rows,\n    written_bytes,\n    memory_usage,\n    query_duration_ms\nFROM system.query_log\nWHERE type &gt;= 2\n  AND event_date &gt;= today() - 1\nORDER BY memory_usage DESC\nLIMIT 10;\n</code></pre>"},{"location":"data-operations/select/#best-practices","title":"Best Practices","text":""},{"location":"data-operations/select/#query-optimization-tips","title":"Query Optimization Tips","text":"<pre><code>-- Check table statistics\nSELECT\n    table,\n    sum(rows) AS total_rows,\n    formatReadableSize(sum(bytes)) AS total_size,\n    min(min_date) AS min_date,\n    max(max_date) AS max_date\nFROM system.parts\nWHERE active\nGROUP BY table;\n\n-- Analyze column cardinality\nSELECT\n    column_name,\n    uniqExact(column_value) AS cardinality\nFROM (\n    SELECT\n        arrayJoin(['column1', 'column2']) AS column_name,\n        column1 AS column_value\n    FROM table_name\n);\n</code></pre>"},{"location":"data-operations/select/#common-optimizations","title":"Common Optimizations","text":"<ol> <li>Use PREWHERE for filtering</li> <li>Leverage materialized views for common queries</li> <li>Use appropriate indexes (ORDER BY columns)</li> <li>Consider sampling for approximate results</li> <li>Use FINAL modifier only when necessary</li> </ol>"},{"location":"data-operations/select/#query-monitoring","title":"Query Monitoring","text":"<pre><code>-- Monitor long-running queries\nSELECT\n    query_id,\n    user,\n    query,\n    read_rows,\n    read_bytes,\n    elapsed,\n    memory_usage\nFROM system.processes\nWHERE elapsed &gt; 10\nORDER BY elapsed DESC;\n\n-- Check query cache usage\nSELECT\n    metric,\n    value\nFROM system.metrics\nWHERE metric LIKE '%Cache%';\n</code></pre>"},{"location":"data-operations/select/#troubleshooting","title":"Troubleshooting","text":""},{"location":"data-operations/select/#memory-usage","title":"Memory Usage","text":"<pre><code>-- Check memory-intensive queries\nSELECT\n    query,\n    peak_memory_usage,\n    memory_usage,\n    query_duration_ms\nFROM system.query_log\nWHERE event_date &gt;= today() - 1\nORDER BY peak_memory_usage DESC\nLIMIT 10;\n</code></pre>"},{"location":"data-operations/select/#query-errors","title":"Query Errors","text":"<pre><code>-- Find failed queries\nSELECT\n    event_time,\n    query,\n    exception,\n    stack_trace\nFROM system.query_log\nWHERE event_date &gt;= today() - 1\n  AND exception != ''\nORDER BY event_time DESC;\n</code></pre>"},{"location":"data-operations/update-delete/","title":"Update and Delete Operations","text":"<p>Commands and best practices for updating and deleting data in ClickHouse.</p>"},{"location":"data-operations/update-delete/#alter-table-mutations","title":"ALTER TABLE MUTATIONS","text":""},{"location":"data-operations/update-delete/#basic-update","title":"Basic UPDATE","text":"<pre><code>-- Update specific values\nALTER TABLE table_name\nUPDATE column1 = 'new_value'\nWHERE column2 = 'condition';\n\n-- Update with expression\nALTER TABLE table_name\nUPDATE column1 = column2 * 2\nWHERE column3 &gt; 100;\n</code></pre>"},{"location":"data-operations/update-delete/#basic-delete","title":"Basic DELETE","text":"<pre><code>-- Delete specific rows\nALTER TABLE table_name\nDELETE WHERE column1 = 'value';\n\n-- Delete with complex condition\nALTER TABLE table_name\nDELETE WHERE (column1 = 'value1' AND column2 &gt; 100)\n   OR (column3 LIKE '%pattern%');\n</code></pre>"},{"location":"data-operations/update-delete/#monitoring-mutations","title":"Monitoring Mutations","text":""},{"location":"data-operations/update-delete/#check-mutation-status","title":"Check Mutation Status","text":"<pre><code>-- View active mutations\nSELECT\n    database,\n    table,\n    mutation_id,\n    command,\n    create_time,\n    is_done\nFROM system.mutations\nWHERE is_done = 0;\n\n-- View completed mutations\nSELECT\n    database,\n    table,\n    mutation_id,\n    command,\n    create_time,\n    is_done,\n    parts_to_do_names\nFROM system.mutations\nWHERE is_done = 1\nORDER BY create_time DESC\nLIMIT 10;\n</code></pre>"},{"location":"data-operations/update-delete/#track-mutation-progress","title":"Track Mutation Progress","text":"<pre><code>-- Monitor mutation progress\nSELECT\n    database,\n    table,\n    mutation_id,\n    create_time,\n    parts_to_do,\n    is_done,\n    latest_failed_part,\n    latest_fail_reason\nFROM system.mutations\nWHERE table = 'table_name'\nORDER BY create_time DESC;\n</code></pre>"},{"location":"data-operations/update-delete/#advanced-operations","title":"Advanced Operations","text":""},{"location":"data-operations/update-delete/#conditional-updates","title":"Conditional Updates","text":"<pre><code>-- Update with CASE statement\nALTER TABLE table_name\nUPDATE column1 = CASE\n    WHEN column2 &gt; 100 THEN 'high'\n    WHEN column2 &gt; 50 THEN 'medium'\n    ELSE 'low'\nEND\nWHERE column2 IS NOT NULL;\n\n-- Update multiple columns\nALTER TABLE table_name\nUPDATE\n    column1 = column1 * 2,\n    column2 = 'updated',\n    column3 = now()\nWHERE column4 IN (1, 2, 3);\n</code></pre>"},{"location":"data-operations/update-delete/#batch-operations","title":"Batch Operations","text":"<pre><code>-- Delete in batches\nALTER TABLE table_name\nDELETE WHERE column1 IN (\n    SELECT id\n    FROM batch_delete_table\n    WHERE status = 'to_delete'\n);\n\n-- Update in batches\nALTER TABLE table_name\nUPDATE column1 = 'updated'\nWHERE column2 IN (\n    SELECT id\n    FROM batch_update_table\n    WHERE needs_update = 1\n);\n</code></pre>"},{"location":"data-operations/update-delete/#best-practices","title":"Best Practices","text":""},{"location":"data-operations/update-delete/#performance-optimization","title":"Performance Optimization","text":"<pre><code>-- Check parts affected by mutation\nSELECT\n    database,\n    table,\n    mutation_id,\n    parts_to_do,\n    parts_to_do_names\nFROM system.mutations\nWHERE is_done = 0;\n\n-- Monitor system resources during mutation\nSELECT\n    metric,\n    value\nFROM system.metrics\nWHERE metric LIKE '%Mutation%';\n</code></pre>"},{"location":"data-operations/update-delete/#mutation-management","title":"Mutation Management","text":"<pre><code>-- Kill stuck mutation\nKILL MUTATION\nWHERE table = 'table_name'\n  AND mutation_id = 'mutation_id';\n\n-- Check mutation errors\nSELECT\n    database,\n    table,\n    mutation_id,\n    latest_fail_reason,\n    latest_failed_part\nFROM system.mutations\nWHERE latest_fail_reason != '';\n</code></pre>"},{"location":"data-operations/update-delete/#data-maintenance","title":"Data Maintenance","text":""},{"location":"data-operations/update-delete/#regular-cleanup","title":"Regular Cleanup","text":"<pre><code>-- Delete old data\nALTER TABLE table_name\nDELETE WHERE timestamp &lt; now() - INTERVAL 90 DAY;\n\n-- Update expired records\nALTER TABLE table_name\nUPDATE status = 'expired'\nWHERE expiry_date &lt; now()\n  AND status = 'active';\n</code></pre>"},{"location":"data-operations/update-delete/#data-quality","title":"Data Quality","text":"<pre><code>-- Fix invalid values\nALTER TABLE table_name\nUPDATE\n    numeric_column = 0\nWHERE numeric_column &lt; 0;\n\n-- Standardize data\nALTER TABLE table_name\nUPDATE\n    string_column = upperUTF8(string_column)\nWHERE string_column != upperUTF8(string_column);\n</code></pre>"},{"location":"data-operations/update-delete/#troubleshooting","title":"Troubleshooting","text":""},{"location":"data-operations/update-delete/#common-issues","title":"Common Issues","text":"<pre><code>-- Check for blocked mutations\nSELECT\n    database,\n    table,\n    mutation_id,\n    create_time,\n    latest_fail_reason\nFROM system.mutations\nWHERE is_done = 0\n  AND create_time &lt; now() - INTERVAL 1 HOUR;\n\n-- Monitor mutation impact\nSELECT\n    table,\n    sum(rows) AS total_rows,\n    formatReadableSize(sum(bytes)) AS total_size\nFROM system.parts\nWHERE table = 'table_name'\n  AND active\nGROUP BY table;\n</code></pre>"},{"location":"data-operations/update-delete/#best-practices-summary","title":"Best Practices Summary","text":"<ol> <li>Always use WHERE clause to limit the scope of mutations</li> <li>Monitor mutation progress and resource usage</li> <li>Consider breaking large mutations into smaller batches</li> <li>Have a rollback plan for large-scale mutations</li> <li>Schedule mutations during off-peak hours</li> <li>Regular monitoring of mutation performance and status</li> </ol>"},{"location":"data-operations/update-delete/#mutation-settings","title":"Mutation Settings","text":"<pre><code>-- Check mutation-related settings\nSELECT\n    name,\n    value,\n    description\nFROM system.settings\nWHERE name LIKE '%mutation%'\n   OR name LIKE '%alter%';\n\n-- Monitor mutation metrics\nSELECT *\nFROM system.metrics\nWHERE metric LIKE '%Mutation%'\n   OR metric LIKE '%Alter%';\n</code></pre>"},{"location":"system-commands/monitoring/","title":"ClickHouse System Monitoring Guide","text":"<p>A comprehensive guide for monitoring ClickHouse deployments.</p>"},{"location":"system-commands/monitoring/#system-health-monitoring","title":"System Health Monitoring","text":""},{"location":"system-commands/monitoring/#memory-usage","title":"Memory Usage","text":"<pre><code>-- Current memory usage by query\nSELECT\n    query_id,\n    user,\n    formatReadableSize(memory_usage) as mem_used,\n    formatReadableSize(peak_memory_usage) as peak_mem,\n    query\nFROM system.processes\nORDER BY memory_usage DESC;\n\n-- Historical memory usage patterns\nSELECT\n    query_id,\n    formatReadableSize(memory_usage) as mem_used,\n    formatReadableSize(peak_memory_usage) as peak_mem,\n    query_duration_ms,\n    query\nFROM system.query_log\nWHERE type = 'QueryFinish'\n  AND event_time &gt;= now() - INTERVAL 1 DAY\nORDER BY memory_usage DESC\nLIMIT 10;\n</code></pre>"},{"location":"system-commands/monitoring/#cpu-usage","title":"CPU Usage","text":"<pre><code>-- Current CPU usage by query\nSELECT\n    query_id,\n    user,\n    elapsed,\n    read_rows,\n    formatReadableSize(read_bytes) as read,\n    total_rows_approx,\n    query\nFROM system.processes\nORDER BY elapsed DESC;\n\n-- CPU usage patterns\nSELECT\n    query,\n    count() as execution_count,\n    avg(query_duration_ms) as avg_duration_ms,\n    max(query_duration_ms) as max_duration_ms,\n    sum(read_rows) as total_rows_read,\n    sum(result_rows) as total_rows_returned\nFROM system.query_log\nWHERE type = 'QueryFinish'\n  AND event_time &gt;= now() - INTERVAL 1 DAY\nGROUP BY query\nORDER BY avg_duration_ms DESC\nLIMIT 10;\n</code></pre>"},{"location":"system-commands/monitoring/#disk-usage","title":"Disk Usage","text":"<pre><code>-- Database sizes\nSELECT\n    name as database,\n    formatReadableSize(sum(bytes_on_disk)) as disk_usage,\n    sum(rows) as total_rows,\n    count() as total_tables\nFROM system.tables\nGROUP BY database\nORDER BY sum(bytes_on_disk) DESC;\n\n-- Table sizes\nSELECT\n    database,\n    table,\n    formatReadableSize(bytes_on_disk) as disk_usage,\n    rows as total_rows,\n    formatReadableSize(bytes_on_disk / rows) as avg_row_size\nFROM system.tables\nWHERE database NOT IN ('system')\nORDER BY bytes_on_disk DESC\nLIMIT 10;\n\n-- Part sizes and distribution\nSELECT\n    database,\n    table,\n    partition,\n    formatReadableSize(sum(bytes_on_disk)) as part_size,\n    count() as part_count,\n    sum(rows) as rows\nFROM system.parts\nWHERE active\nGROUP BY database, table, partition\nORDER BY sum(bytes_on_disk) DESC\nLIMIT 10;\n</code></pre>"},{"location":"system-commands/monitoring/#query-performance-monitoring","title":"Query Performance Monitoring","text":""},{"location":"system-commands/monitoring/#slow-queries","title":"Slow Queries","text":"<pre><code>-- Recent slow queries\nSELECT\n    query_id,\n    user,\n    query_duration_ms,\n    read_rows,\n    formatReadableSize(read_bytes) as data_read,\n    result_rows,\n    formatReadableSize(memory_usage) as memory,\n    query\nFROM system.query_log\nWHERE type = 'QueryFinish'\n  AND query_duration_ms &gt; 1000  -- Queries taking more than 1 second\n  AND event_time &gt;= now() - INTERVAL 1 DAY\n  AND LOWER(query) NOT LIKE '%system%'  -- Filter out system queries\nORDER BY query_duration_ms DESC\nLIMIT 10;\n\n-- Query patterns by duration\nSELECT\n    user,\n    count() as query_count,\n    avg(query_duration_ms) as avg_duration_ms,\n    max(query_duration_ms) as max_duration_ms\nFROM system.query_log\nWHERE type = 'QueryFinish'\n  AND event_time &gt;= now() - INTERVAL 1 DAY\nGROUP BY user\nORDER BY avg_duration_ms DESC;\n</code></pre>"},{"location":"system-commands/monitoring/#query-errors","title":"Query Errors","text":"<pre><code>-- Recent query errors\nSELECT\n    user,\n    query_id,\n    event_time,\n    query_duration_ms,\n    exception,\n    query\nFROM system.query_log\nWHERE type = 'ExceptionWhileProcessing'\n  AND event_time &gt;= now() - INTERVAL 1 DAY\nORDER BY event_time DESC;\n\n-- Error patterns\nSELECT\n    exception,\n    count() as error_count,\n    any(query) as sample_query\nFROM system.query_log\nWHERE type = 'ExceptionWhileProcessing'\n  AND event_time &gt;= now() - INTERVAL 1 DAY\nGROUP BY exception\nORDER BY error_count DESC;\n</code></pre>"},{"location":"system-commands/monitoring/#system-configuration","title":"System Configuration","text":""},{"location":"system-commands/monitoring/#settings-check","title":"Settings Check","text":"<pre><code>-- Current system settings\nSELECT\n    name,\n    value,\n    changed,\n    description\nFROM system.settings\nWHERE changed = 1\nORDER BY name;\n\n-- User settings\nSELECT\n    *\nFROM system.users\nFORMAT Vertical;\n</code></pre>"},{"location":"system-commands/monitoring/#replication-status","title":"Replication Status","text":"<pre><code>-- Replication delays\nSELECT\n    database,\n    table,\n    is_leader,\n    total_replicas,\n    active_replicas,\n    formatReadableSize(queue_size) as queue_size,\n    absolute_delay\nFROM system.replicas\nORDER BY absolute_delay DESC;\n\n-- Replication queue\nSELECT\n    database,\n    table,\n    count() as queue_entries,\n    max(create_time) as latest_entry\nFROM system.replication_queue\nGROUP BY database, table\nORDER BY queue_entries DESC;\n</code></pre>"},{"location":"system-commands/monitoring/#best-practices","title":"Best Practices","text":"<ol> <li>Monitor memory usage regularly to prevent OOM issues</li> <li>Track slow queries and optimize them</li> <li>Keep an eye on disk usage and partition sizes</li> <li>Monitor replication delays in distributed setups</li> <li>Check error patterns periodically</li> <li>Review system settings after updates</li> </ol>"},{"location":"system-commands/monitoring/#references","title":"References","text":"<ul> <li>@ClickHouseSQL System Tables</li> <li>@Web Monitoring</li> <li>@ClickHouseSQL Query Log</li> </ul>"},{"location":"system-commands/performance/","title":"Performance Optimization","text":"<p>Essential commands and techniques for optimizing ClickHouse performance.</p>"},{"location":"system-commands/performance/#query-performance","title":"Query Performance","text":""},{"location":"system-commands/performance/#query-analysis","title":"Query Analysis","text":"<pre><code>-- Analyze query performance\nSELECT\n    query,\n    query_duration_ms,\n    read_rows,\n    read_bytes,\n    written_rows,\n    written_bytes,\n    result_rows,\n    result_bytes,\n    memory_usage\nFROM system.query_log\nWHERE type &gt;= 2\n  AND event_date &gt;= today() - 1\nORDER BY query_duration_ms DESC\nLIMIT 10;\n\n-- Query profiling\nSELECT\n    ProfileEvents.Names AS metric,\n    ProfileEvents.Values AS value\nFROM system.query_log\nARRAY JOIN ProfileEvents\nWHERE query_id = 'your_query_id'\n  AND type = 'QueryFinish';\n</code></pre>"},{"location":"system-commands/performance/#slow-queries","title":"Slow Queries","text":"<pre><code>-- Find slow queries\nSELECT\n    query_id,\n    user,\n    query,\n    read_rows,\n    read_bytes,\n    elapsed,\n    memory_usage\nFROM system.processes\nWHERE elapsed &gt; 10\nORDER BY elapsed DESC;\n\n-- Analyze query patterns\nSELECT\n    user,\n    count() AS query_count,\n    avg(query_duration_ms) AS avg_duration,\n    max(query_duration_ms) AS max_duration,\n    sum(memory_usage) AS total_memory\nFROM system.query_log\nWHERE type &gt;= 2\n  AND event_date &gt;= today() - 1\nGROUP BY user\nORDER BY avg_duration DESC;\n</code></pre>"},{"location":"system-commands/performance/#memory-management","title":"Memory Management","text":""},{"location":"system-commands/performance/#memory-usage","title":"Memory Usage","text":"<pre><code>-- Current memory usage\nSELECT\n    metric,\n    value,\n    description\nFROM system.metrics\nWHERE metric LIKE '%Memory%'\nORDER BY metric;\n\n-- Memory usage by query\nSELECT\n    query_id,\n    user,\n    query,\n    formatReadableSize(memory_usage) AS memory,\n    elapsed\nFROM system.processes\nORDER BY memory_usage DESC;\n</code></pre>"},{"location":"system-commands/performance/#memory-settings","title":"Memory Settings","text":"<pre><code>-- Check memory-related settings\nSELECT\n    name,\n    value,\n    changed,\n    description\nFROM system.settings\nWHERE name LIKE '%memory%'\n   OR name LIKE '%buffer%';\n\n-- Monitor memory limits\nSELECT *\nFROM system.metrics\nWHERE metric IN (\n    'MemoryTracking',\n    'MemoryTrackingInBackgroundProcessingPool',\n    'MemoryTrackingInBackgroundMoveProcessingPool',\n    'MemoryTrackingInBackgroundSchedulePool'\n);\n</code></pre>"},{"location":"system-commands/performance/#storage-optimization","title":"Storage Optimization","text":""},{"location":"system-commands/performance/#table-optimization","title":"Table Optimization","text":"<pre><code>-- Find tables with many parts\nSELECT\n    database,\n    table,\n    count() AS parts_count,\n    sum(rows) AS total_rows,\n    formatReadableSize(sum(bytes)) AS total_size\nFROM system.parts\nWHERE active\nGROUP BY database, table\nHAVING parts_count &gt; 10\nORDER BY parts_count DESC;\n\n-- Check compression ratio\nSELECT\n    database,\n    table,\n    formatReadableSize(sum(data_compressed_bytes)) AS compressed,\n    formatReadableSize(sum(data_uncompressed_bytes)) AS uncompressed,\n    round(sum(data_uncompressed_bytes) / sum(data_compressed_bytes), 2) AS ratio\nFROM system.parts\nWHERE active\nGROUP BY database, table\nORDER BY ratio DESC;\n</code></pre>"},{"location":"system-commands/performance/#part-management","title":"Part Management","text":"<pre><code>-- Monitor part merges\nSELECT\n    database,\n    table,\n    partition_id,\n    elapsed,\n    progress,\n    num_parts,\n    result_part_name,\n    total_size_bytes_compressed,\n    is_mutation\nFROM system.merges\nORDER BY elapsed DESC;\n\n-- Check part distribution\nSELECT\n    database,\n    table,\n    partition,\n    count() AS part_count,\n    sum(rows) AS total_rows,\n    formatReadableSize(sum(bytes)) AS total_size\nFROM system.parts\nWHERE active\nGROUP BY database, table, partition\nORDER BY part_count DESC;\n</code></pre>"},{"location":"system-commands/performance/#system-optimization","title":"System Optimization","text":""},{"location":"system-commands/performance/#background-tasks","title":"Background Tasks","text":"<pre><code>-- Monitor background operations\nSELECT *\nFROM system.background_processing_pool\nORDER BY elapsed DESC;\n\n-- Check background metrics\nSELECT *\nFROM system.metrics\nWHERE metric LIKE '%Background%'\nORDER BY metric;\n</code></pre>"},{"location":"system-commands/performance/#resource-usage","title":"Resource Usage","text":"<pre><code>-- CPU usage metrics\nSELECT *\nFROM system.metrics\nWHERE metric LIKE '%CPU%'\n   OR metric LIKE '%Thread%';\n\n-- IO metrics\nSELECT *\nFROM system.metrics\nWHERE metric LIKE '%IO%'\n   OR metric LIKE '%Disk%';\n</code></pre>"},{"location":"system-commands/performance/#performance-tuning","title":"Performance Tuning","text":""},{"location":"system-commands/performance/#settings-optimization","title":"Settings Optimization","text":"<pre><code>-- Important performance settings\nSELECT\n    name,\n    value,\n    changed,\n    description\nFROM system.settings\nWHERE name IN (\n    'max_threads',\n    'max_insert_threads',\n    'max_compress_block_size',\n    'min_compress_block_size',\n    'max_query_size',\n    'max_memory_usage',\n    'max_memory_usage_for_user'\n);\n\n-- Check current optimization settings\nSELECT\n    name,\n    value,\n    changed,\n    description\nFROM system.settings\nWHERE name LIKE '%optimize%'\n   OR name LIKE '%parallel%';\n</code></pre>"},{"location":"system-commands/performance/#query-cache","title":"Query Cache","text":"<pre><code>-- Monitor query cache\nSELECT *\nFROM system.metrics\nWHERE metric LIKE '%Cache%';\n\n-- Check cache effectiveness\nSELECT\n    metric,\n    value\nFROM system.metrics\nWHERE metric IN (\n    'MarkCacheBytes',\n    'MarkCacheFiles',\n    'UncompressedCacheBytes',\n    'UncompressedCacheCells'\n);\n</code></pre>"},{"location":"system-commands/performance/#performance-monitoring","title":"Performance Monitoring","text":""},{"location":"system-commands/performance/#real-time-metrics","title":"Real-time Metrics","text":"<pre><code>-- Current performance metrics\nSELECT\n    metric,\n    value,\n    description\nFROM system.metrics\nWHERE metric IN (\n    'Query',\n    'QueryThread',\n    'QueryPreempted',\n    'QueryMemoryTracking',\n    'CompressedReadBufferBlocks',\n    'CompressedReadBufferBytes'\n);\n\n-- System loads\nSELECT *\nFROM system.asynchronous_metrics\nWHERE metric LIKE '%Load%'\n   OR metric LIKE '%CPU%'\n   OR metric LIKE '%Memory%';\n</code></pre>"},{"location":"system-commands/performance/#performance-trends","title":"Performance Trends","text":"<pre><code>-- Query performance over time\nSELECT\n    toStartOfHour(event_time) AS hour,\n    count() AS query_count,\n    avg(query_duration_ms) AS avg_duration,\n    max(query_duration_ms) AS max_duration,\n    sum(memory_usage) AS total_memory\nFROM system.query_log\nWHERE type &gt;= 2\n  AND event_date &gt;= today() - 1\nGROUP BY hour\nORDER BY hour DESC;\n\n-- Resource usage trends\nSELECT\n    toStartOfHour(event_time) AS hour,\n    avg(read_rows) AS avg_read_rows,\n    avg(read_bytes) AS avg_read_bytes,\n    avg(memory_usage) AS avg_memory_usage\nFROM system.query_log\nWHERE type &gt;= 2\n  AND event_date &gt;= today() - 1\nGROUP BY hour\nORDER BY hour DESC;\n</code></pre>"}]}